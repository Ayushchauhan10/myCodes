
<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>

<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>

<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>

<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>

<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>

<!doctype html><html lang="en"><head><title data-rh="true">LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2023-01-27T19:53:39.127Z"/><meta data-rh="true" name="title" content="LZ77 compression in Javascript. When I was working on a library for… | by Vincentcorbee | Medium"/><meta data-rh="true" property="og:title" content="LZ77 compression in Javascript"/><meta data-rh="true" property="al:android:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:ios:url" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…"/><meta data-rh="true" property="og:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" property="og:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="al:web:url" content="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" property="article:author" content="https://medium.com/@vincentcorbee"/><meta data-rh="true" name="author" content="Vincentcorbee"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" property="twitter:title" content="LZ77 compression in Javascript"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/cd2583d2a8bd"/><meta data-rh="true" property="twitter:description" content="When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/v2/resize:fit:727/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="17 min read"/><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://medium.com/@vincentcorbee"/><link data-rh="true" rel="canonical" href="https://medium.com/@vincentcorbee/lz77-compression-in-javascript-cd2583d2a8bd"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/cd2583d2a8bd"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:1200\u002F1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"],"url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","dateCreated":"2023-01-15T14:42:51.477Z","datePublished":"2023-01-15T14:42:51.477Z","dateModified":"2023-01-27T19:53:46.158Z","headline":"LZ77 compression in Javascript - Vincentcorbee - Medium","name":"LZ77 compression in Javascript - Vincentcorbee - Medium","description":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode…","identifier":"cd2583d2a8bd","author":{"@type":"Person","name":"Vincentcorbee","url":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee"},"creator":["Vincentcorbee"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fmedium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fv2\u002Fresize:fit:616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd"}</script><style type="text/css" data-fela-rehydration="489" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style type="text/css" data-fela-rehydration="489" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-webkit-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@-moz-keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes k2{0%{transform:scale(1)}50%{transform:scale(1.1)}100%{transform:scale(1)}}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au{fill:rgba(0, 0, 0, 1)}.av{height:22px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.dv{margin-left:8px}.dw{color:#6B6B6B}.dx{font-size:13px}.dy{height:100%}.dz{height:25px}.ea{fill:rgba(41, 41, 41, 1)}.ed{margin-right:32px}.ee{position:relative}.ef{fill:#6B6B6B}.ei{background:transparent}.ej svg{margin-left:4px}.ek svg{fill:#6B6B6B}.em{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.eo{position:absolute}.eq{box-sizing:border-box}.ew{margin:0 24px}.fa{background:rgba(255, 255, 255, 1)}.fb{border:1px solid #F2F2F2}.fc{box-shadow:0 1px 4px #F2F2F2}.fd{max-height:100vh}.fe{overflow-y:auto}.ff{left:0}.fg{top:calc(100vh + 100px)}.fh{bottom:calc(100vh + 100px)}.fi{width:10px}.fj{pointer-events:none}.fk{word-break:break-word}.fl{word-wrap:break-word}.fm:after{display:block}.fn:after{content:""}.fo:after{clear:both}.fp{line-height:1.23}.fq{letter-spacing:0}.fr{font-style:normal}.fs{font-weight:700}.gs{@media all and (max-width: 551.98px):8px}.gt{@media all and (min-width: 552px) and (max-width: 727.98px):8px}.gu{@media all and (min-width: 728px) and (max-width: 903.98px):16px}.gv{@media all and (min-width: 904px) and (max-width: 1079.98px):16px}.gw{@media all and (min-width: 1080px):16px}.hc{align-items:baseline}.hd{width:48px}.he{height:48px}.hf{border:2px solid rgba(255, 255, 255, 1)}.hg{z-index:0}.hh{box-shadow:none}.hi{border:1px solid rgba(0, 0, 0, 0.05)}.hj{margin-bottom:2px}.hk{flex-wrap:nowrap}.hl{font-size:16px}.hm{line-height:24px}.ho{margin:0 8px}.hp{display:inline}.hq{color:#1A8917}.hr{fill:#1A8917}.hs:disabled{opacity:0.3}.hv{flex:0 0 auto}.hy{flex-wrap:wrap}.hz{padding-left:8px}.ia{padding-right:8px}.jb> *{flex-shrink:0}.jc{overflow-x:scroll}.jd::-webkit-scrollbar{display:none}.je{scrollbar-width:none}.jf{-ms-overflow-style:none}.jg{width:74px}.jh{flex-direction:row}.ji{z-index:2}.jj{margin-right:4px}.jm{-webkit-user-select:none}.jn{border:0}.jo{cursor:progress}.jp{fill:rgba(117, 117, 117, 1)}.js{opacity:0.25}.jt{outline:0}.ju{user-select:none}.jv> svg{pointer-events:none}.ke{opacity:1}.kf{padding:4px 0}.ki{margin-top:0px}.kj{width:16px}.kk{padding:8px 2px}.kn svg path{fill:#6B6B6B}.ko path{fill:#242424}.kp{display:inline-flex}.kv{max-width:100%}.kw svg{color:#6B6B6B}.ln{margin-left:auto}.lo{margin-right:auto}.lp{max-width:727px}.lv{clear:both}.lx{cursor:zoom-in}.ly{z-index:auto}.ma{height:auto}.mb{line-height:1.58}.mc{letter-spacing:-0.004em}.md{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.my{margin-bottom:-0.46em}.mz{text-decoration:underline}.na{margin-top:32px}.nb{margin-bottom:14px}.nc{padding-top:24px}.nd{padding-bottom:10px}.ne{background-color:#000000}.nf{height:3px}.ng{width:3px}.nh{margin-right:20px}.ni{line-height:1.12}.nj{letter-spacing:-0.022em}.nk{font-weight:600}.of{margin-bottom:-0.28em}.ov{overflow-x:auto}.ow{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.ox{padding:32px}.oy{border:1px solid #E5E5E5}.oz{line-height:1.4}.pa{margin-top:-0.2em}.pb{margin-bottom:-0.2em}.pc{white-space:pre}.pd{min-width:fit-content}.pe{margin-bottom:26px}.pf{margin-top:6px}.pg{margin-top:8px}.ph{margin-right:8px}.pi{padding:8px 16px}.pj{border-radius:100px}.pk{transition:background 300ms ease}.pm{white-space:nowrap}.pn{border-top:none}.pt{height:52px}.pu{max-height:52px}.pv{box-sizing:content-box}.pw{position:static}.px{z-index:1}.pz{max-width:155px}.qk{align-items:flex-end}.ql{width:76px}.qm{height:76px}.qn{border:2px solid #F9F9F9}.qo{height:72px}.qp{width:72px}.qq{color:#F2F2F2}.qr{fill:#F2F2F2}.qs{background:#F2F2F2}.qt{border-color:#F2F2F2}.qz:disabled{cursor:inherit !important}.ra:disabled:hover{background:#1A8917}.rb:disabled:hover{border-color:#1A8917}.rc{border-radius:99em}.rd{width:auto}.re{border-width:1px}.rf{border-style:solid}.rg{text-decoration:none}.rh{text-align:center}.ri{stroke:#F2F2F2}.rj{height:36px}.rk{width:36px}.rl{font-weight:500}.rm{font-size:24px}.rn{line-height:30px}.ro{letter-spacing:-0.016em}.rp{margin-top:16px}.rq{height:0px}.rr{border-bottom:solid 1px #E5E5E5}.rs{margin-top:72px}.rt{padding:24px 0}.ru{margin-bottom:0px}.rv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.eg:hover{color:#242424}.eh:hover{fill:#242424}.el:hover svg{fill:#242424}.ep:hover{background-color:rgba(0, 0, 0, 0.1)}.hn:hover{text-decoration:underline}.ht:hover:not(:disabled){color:#156D12}.hu:hover:not(:disabled){fill:#156D12}.jr:hover{fill:rgba(117, 117, 117, 1)}.kg:hover{fill:#000000}.kh:hover p{color:#000000}.kl:hover:not(:disabled) svg path{fill:#000000}.kx:hover svg{color:#000000}.pl:hover{background-color:#F2F2F2}.qu:hover{background:#F2F2F2}.qv:hover{border-color:#F2F2F2}.qw:hover{cursor:wait}.qx:hover{color:#F2F2F2}.qy:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.jq:focus{fill:rgba(117, 117, 117, 1)}.km:focus svg path{fill:#000000}.ky:focus svg{color:#000000}.lz:focus{transform:scale(1.01)}.jw:active{border-style:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ec{display:flex}.ev{margin-bottom:68px}.ez{max-width:680px}.gn{font-size:42px}.go{margin-top:1.19em}.gp{margin-bottom:32px}.gq{line-height:52px}.gr{letter-spacing:-0.011em}.hb{align-items:center}.in{border-top:solid 1px #F2F2F2}.io{border-bottom:solid 1px #F2F2F2}.ip{margin:32px 0 0}.iq{padding:3px 8px}.iz> *{margin-right:24px}.ja> :last-child{margin-right:0}.kd{margin-top:0px}.ku{margin:0}.lu{margin-top:40px}.mu{font-size:20px}.mv{margin-top:2.14em}.mw{line-height:32px}.mx{letter-spacing:-0.003em}.ob{font-size:24px}.oc{margin-top:1.25em}.od{line-height:30px}.oe{letter-spacing:-0.016em}.ok{margin-top:0.94em}.op{margin-top:1.95em}.ou{margin-top:56px}.ps{margin-bottom:88px}.qe{display:inline-block}.qj{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kc{margin-top:0px}.qd{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kb{margin-top:0px}.qc{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.jz{margin-top:0px}.ka{margin-right:0px}.qb{display:inline-block}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.ds{justify-content:center}.er{margin-bottom:4px}.ft{font-size:32px}.fu{margin-top:1.01em}.fv{margin-bottom:24px}.fw{line-height:38px}.fx{letter-spacing:-0.014em}.gx{align-items:flex-start}.hw{flex-direction:column}.ib{margin:24px -24px 0}.ic{padding:0}.ir> *{margin-right:8px}.is> :last-child{margin-right:24px}.jk{margin-left:0px}.jx{margin-top:0px}.jy{margin-right:0px}.kq{margin:0}.kz{border:1px solid #F2F2F2}.la{border-radius:99em}.lb{padding:0px 16px 0px 12px}.lc{height:38px}.ld{align-items:center}.lf svg{margin-right:8px}.lq{margin-top:32px}.me{font-size:18px}.mf{margin-top:1.56em}.mg{line-height:28px}.mh{letter-spacing:-0.003em}.nl{font-size:20px}.nm{margin-top:0.93em}.nn{line-height:24px}.no{letter-spacing:0}.og{margin-top:0.67em}.ol{margin-top:1.2em}.oq{margin-top:40px}.po{margin-bottom:80px}.qa{display:inline-block}.qf{padding-top:48px}.le:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.eb{display:flex}.eu{margin-bottom:68px}.ey{max-width:680px}.gi{font-size:42px}.gj{margin-top:1.19em}.gk{margin-bottom:32px}.gl{line-height:52px}.gm{letter-spacing:-0.011em}.ha{align-items:center}.ij{border-top:solid 1px #F2F2F2}.ik{border-bottom:solid 1px #F2F2F2}.il{margin:32px 0 0}.im{padding:3px 8px}.ix> *{margin-right:24px}.iy> :last-child{margin-right:0}.kt{margin:0}.lt{margin-top:40px}.mq{font-size:20px}.mr{margin-top:2.14em}.ms{line-height:32px}.mt{letter-spacing:-0.003em}.nx{font-size:24px}.ny{margin-top:1.25em}.nz{line-height:30px}.oa{letter-spacing:-0.016em}.oj{margin-top:0.94em}.oo{margin-top:1.95em}.ot{margin-top:56px}.pr{margin-bottom:88px}.qi{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.du{justify-content:center}.et{margin-bottom:68px}.ex{max-width:680px}.gd{font-size:42px}.ge{margin-top:1.19em}.gf{margin-bottom:32px}.gg{line-height:52px}.gh{letter-spacing:-0.011em}.gz{align-items:center}.if{border-top:solid 1px #F2F2F2}.ig{border-bottom:solid 1px #F2F2F2}.ih{margin:32px 0 0}.ii{padding:3px 8px}.iv> *{margin-right:24px}.iw> :last-child{margin-right:0}.ks{margin:0}.ls{margin-top:40px}.mm{font-size:20px}.mn{margin-top:2.14em}.mo{line-height:32px}.mp{letter-spacing:-0.003em}.nt{font-size:24px}.nu{margin-top:1.25em}.nv{line-height:30px}.nw{letter-spacing:-0.016em}.oi{margin-top:0.94em}.on{margin-top:1.95em}.os{margin-top:56px}.pq{margin-bottom:88px}.qh{padding-top:72px}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dt{justify-content:center}.es{margin-bottom:4px}.fy{font-size:32px}.fz{margin-top:1.01em}.ga{margin-bottom:24px}.gb{line-height:38px}.gc{letter-spacing:-0.014em}.gy{align-items:flex-start}.hx{flex-direction:column}.id{margin:24px 0 0}.ie{padding:0}.it> *{margin-right:8px}.iu> :last-child{margin-right:8px}.jl{margin-left:0px}.kr{margin:0}.lg{border:1px solid #F2F2F2}.lh{border-radius:99em}.li{padding:0px 16px 0px 12px}.lj{height:38px}.lk{align-items:center}.lm svg{margin-right:8px}.lr{margin-top:32px}.mi{font-size:18px}.mj{margin-top:1.56em}.mk{line-height:28px}.ml{letter-spacing:-0.003em}.np{font-size:20px}.nq{margin-top:0.93em}.nr{line-height:24px}.ns{letter-spacing:0}.oh{margin-top:0.67em}.om{margin-top:1.2em}.or{margin-top:40px}.pp{margin-bottom:80px}.qg{padding-top:48px}.ll:hover{border-color:#E5E5E5}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="print">.py{display:none}</style><style type="text/css" data-fela-rehydration="489" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.lw{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="l c"><div class="l m n o c"><div class="am q r s ds u dt w du i d y z"><a class="dw ag dx be ak b am an ao ap aq ar as at s u w i d q dy z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcd2583d2a8bd&amp;%7Efeature=LiOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg width="10" height="10" viewBox="0 0 10 10" fill="none" class="dv"><path d="M.98 8.48a.37.37 0 1 0 .54.54l-.54-.54zm7.77-7.23h.38c0-.2-.17-.38-.38-.38v.38zM8.37 6.5a.37.37 0 1 0 .76 0h-.76zM3.5.87a.37.37 0 1 0 0 .76V.88zM1.52 9.03l7.5-7.5-.54-.54-7.5 7.5.54.54zm6.86-7.77V6.5h.74V1.25h-.74zm-4.88.38h5.25V.88H3.5v.74z" fill="currentColor"></path></svg></a></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" rel="noopener follow" href="/?source=---two_column_layout_nav----------------------------------"><svg viewBox="0 0 1043.63 592.71" class="dz ea"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search" value=""/></div></div></div><div class="h k w eb ec"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/new-story?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Write"><path d="M14 4a.5.5 0 0 0 0-1v1zm7 6a.5.5 0 0 0-1 0h1zm-7-7H4v1h10V3zM3 4v16h1V4H3zm1 17h16v-1H4v1zm17-1V10h-1v10h1zm-1 1a1 1 0 0 0 1-1h-1v1zM3 20a1 1 0 0 0 1 1v-1H3zM4 3a1 1 0 0 0-1 1h1V3z" fill="currentColor"></path><path d="M17.5 4.5l-8.46 8.46a.25.25 0 0 0-.06.1l-.82 2.47c-.07.2.12.38.31.31l2.47-.82a.25.25 0 0 0 .1-.06L19.5 6.5m-2-2l2.32-2.32c.1-.1.26-.1.36 0l1.64 1.64c.1.1.1.26 0 .36L19.5 6.5m-2-2l2 2" stroke="currentColor"></path></svg><div class="dv l">Write</div></div></a></div></div><div class="k j i d"><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" rel="noopener follow" href="/search?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Search"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.1 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0zm6.94-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .8-.79l-3.74-3.73A8.05 8.05 0 0 0 11.04 3v.01z" fill="currentColor"></path></svg></div></a></div></div><div class="ed ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerNotificationButton" rel="noopener follow" href="/me/notifications?source=---two_column_layout_nav----------------------------------"><div class="be b bf z dw ee ef ab q eg eh"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" aria-label="Notifications"><path d="M15 18.5a3 3 0 1 1-6 0" stroke="currentColor" stroke-linecap="round"></path><path d="M5.5 10.53V9a6.5 6.5 0 0 1 13 0v1.53c0 1.42.56 2.78 1.57 3.79l.03.03c.26.26.4.6.4.97v2.93c0 .14-.11.25-.25.25H3.75a.25.25 0 0 1-.25-.25v-2.93c0-.37.14-.71.4-.97l.03-.03c1-1 1.57-2.37 1.57-3.79z" stroke="currentColor" stroke-linejoin="round"></path></svg></div></a></div><div class="l" aria-hidden="false"><button class="ax ei am ab q ao ej ek el" aria-label="user options menu" data-testid="headerUserIcon"><div class="l ee"><div class="l ee"><img alt="Chauhan Ayush B" class="l eq bx by bz cw" src="https://miro.medium.com/v2/resize:fill:64:64/0*B6uJ2u7UnHMBNvpr" width="32" height="32" loading="lazy"/><div class="em bx l by bz eo n ax ep"></div></div></div></button></div></div></div><div class="l"><div class="er es et eu ev l"><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="eo ff fg fh fi fj"></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><div><h1 id="2130" class="pw-post-title fp fq fr be fs ft fu fv fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr bj" data-testid="storyTitle">LZ77 compression in Javascript</h1><div class="gs gt gu gv gw"><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="gx gy gz ha hb ab"><div><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l hd he bx hf hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx dc dd cw" src="https://miro.medium.com/v2/resize:fill:88:88/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="44" height="44" loading="lazy" data-testid="authorPhoto"/><div class="hh bx l dc dd eo n hi ep"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="hj ab q"><div class="ab q hk"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b hl hm bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" data-testid="authorName" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------">Vincentcorbee</a></p></div></div></div><span class="ho hp" aria-hidden="true"><span class="be b bf z dw">·</span></span><p class="be b hl hm dw"><button class="hq hr ah ai aj ak al am an ao ap aq ar hs ht hu" disabled="">Follow</button></p></div></div></span></div></div><div class="l hv"><span class="be b bf z dw"><div class="ab cm hw hx hy"><span class="be b bf z dw"><div class="ab ae"><span data-testid="storyReadTime">17 min read</span><div class="hz ia l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dw">·</span></span></div><span data-testid="storyPublishDate">Jan 15, 2023</span></div></span></div></span></div></div></div><div class="ab co ib ic id ie if ig ih ii ij ik il im in io ip iq"><div class="h k w eb ec q"><div class="jg l"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div><div class="ab q ir is it iu iv iw ix iy iz ja jb jc jd je jf"><div class="kj k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="headerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="eq kp cm"><div class="l ae"><div class="ab ca"><div class="kq kr ks kt ku kv ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0zm9-10a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm3.38 10.42l-4.6 3.06a.5.5 0 0 1-.78-.41V8.93c0-.4.45-.63.78-.41l4.6 3.06c.3.2.3.64 0 .84z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">Share</p></div></button></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="headerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky kz la lb lc s ld le lf lg lh li lj u lk ll lm"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg><div class="j i d"><p class="be b bf z dw">More</p></div></button></div></div></div></div></div></div></div></div></div><figure class="lq lr ls lt lu lv ln lo paragraph-image"><div role="button" tabindex="0" class="lw lx ee ly bg lz"><div class="ln lo lp"><picture><source srcSet="https://miro.medium.com/v2/resize:fit:640/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px" type="image/webp"/><source data-testid="og" srcSet="https://miro.medium.com/v2/resize:fit:640/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 640w, https://miro.medium.com/v2/resize:fit:720/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 720w, https://miro.medium.com/v2/resize:fit:750/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 750w, https://miro.medium.com/v2/resize:fit:786/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 786w, https://miro.medium.com/v2/resize:fit:828/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 828w, https://miro.medium.com/v2/resize:fit:1100/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1100w, https://miro.medium.com/v2/resize:fit:1400/1*lAxi1TrfT8UNKj0KSUo6JA.jpeg 1400w" sizes="(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px"/><img alt="" class="bg kv ma c" width="700" height="254" loading="eager" role="presentation"/></picture></div></div></figure><p id="a413" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the </strong><a class="af mz" href="https://www.rfc-editor.org/rfc/rfc1951" rel="noopener ugc nofollow" target="_blank"><strong class="md fs">rfc</strong></a><strong class="md fs">. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.</strong></p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="96cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c2af" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">So what is LZ77</h1><p id="4123" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].</p><p id="1494" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First some key terms need to be addressed:</p><p id="5520" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">coding position</strong><br/>This is the position in the input stream for the character currently being encoded</p><p id="68a0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">search buffer<br/></strong>The search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.</p><p id="772b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">lookahead buffer<br/></strong>The lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a <strong class="md fs">A </strong>after that comes the characters <strong class="md fs">B C D E. </strong>If A matches, it will try and match as much characters as it can in the lookahead buffer.</p><p id="060b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj"><strong class="md fs">sliding window<br/></strong>The three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.</p><h1 id="15b1" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj"><strong class="al">So how does this process work?</strong></h1><p id="8782" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Let’s use the following as our input:<strong class="md fs"> abcbbcbaaaaaa</strong></p><p id="9fc3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First let’s define the size of our sliding window. Let’s say we have a <strong class="md fs">search buffer </strong>of 6 characters and a <strong class="md fs">lookahead buffer</strong> of 5 characters.</p><p id="8f61" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Then the algorithms starts with moving the <strong class="md fs">coding position</strong> to the <strong class="md fs">start</strong> of the <strong class="md fs">input</strong>. This means that our search buffer is empty, our current coding position points at character <strong class="md fs">a </strong>and our lookahead buffer contains <strong class="md fs">babcb</strong>.</p><p id="241d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Thus our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="18f3" class="oz nj fr ow b bf pa pb l pc pd">source<br/>a b c b b c b a a a a a a<br/><br/>sliding window<br/><strong class="ow fs">a</strong> b c b b c<br/>0 1 2 3 4 5</span></pre><p id="1f3d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.</p><p id="989b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So we have our first output: [0, 0, a]. 🥹</p><p id="fddf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0d10" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a b c b b c b a a a a a a<br/><br/> sliding window<br/> a <strong class="ow fs">b</strong> c b b c e<br/>-1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]</span></pre><p id="f959" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the character <strong class="md fs">a</strong>. So let’s repeat the process for <strong class="md fs">b</strong>. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8071" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b c b b c b a a a a a a<br/><br/> sliding window<br/> a  b <strong class="ow fs">c</strong> b b c b a<br/>-2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]</span></pre><p id="dda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">c</strong> and our search buffer now contains the characters <strong class="md fs">ab</strong>. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].</p><p id="d411" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our sliding window moves over one position and our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="7504" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c b b c b a a a a a a<br/><br/> sliding window<br/> a  b  c <strong class="ow fs">b</strong> b c b a a<br/>-3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]</span></pre><p id="5420" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our coding position is now at <strong class="md fs">b </strong>and our search buffer now contains the characters <strong class="md fs">abc</strong>. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is <strong class="md fs">b</strong>. So we check for <strong class="md fs">bb</strong> and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a <strong class="md fs">b</strong>.</p><p id="9ee3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now our state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5c76" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/> a  b  c  b  b <strong class="ow fs">c</strong> b a a a a<br/>-5 -4 -3 -2 -1 0 1 2 3 4 5<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]</span></pre><p id="5d63" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s repeat the process again. What can we match? Wel have a match for <strong class="md fs">cb</strong> in our search buffer at -3. So we will output [3, 2, a].</p><p id="ebd2" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our state now looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="88cf" class="oz nj fr ow b bf pa pb l pc pd"> source<br/> a  b  c  b  b c b a a a a a a<br/><br/> sliding window<br/>       c  b  b  c  b  a <strong class="ow fs">a</strong> a a a a<br/>      -6 -5 -4 -3 -2 -1 0 1 2 3 4<br/><br/> outputs<br/> [0, 0, a]<br/> [0, 0, b]<br/> [0, 0, c]<br/> [2, 1, b]<br/> [3, 2, a]</span></pre><p id="51c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.</p><p id="c8b8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let us again repeat the process. We take our character <strong class="md fs">a</strong> and see that it matches on -1. We matched <strong class="md fs">a </strong>and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!</p><p id="85a1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get <strong class="md fs">run length encoding</strong> for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of <strong class="md fs">a</strong> that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.</p><p id="7df0" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So our length becomes 5, i.e. 5 times an <strong class="md fs">a</strong>. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.</p><p id="6ace" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our finished state looks like this:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="9fdf" class="oz nj fr ow b bf pa pb l pc pd">outputs<br/>[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="06ab" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And we are done! 🎉</p><p id="6fd1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character <strong class="md fs">a</strong>, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩</p><p id="45d3" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.</p><p id="501e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Wel great we compress it, but how do we get our original data back?</p><h1 id="5518" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="9a94" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">To decompress we convert each triplet back into a piece of the original data and add it to the result.</p><p id="6ab9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The outputs we have produced in the compression fase where:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="5dbf" class="oz nj fr ow b bf pa pb l pc pd">[0, 0, a]<br/>[0, 0, b]<br/>[0, 0, c]<br/>[2, 1, b]<br/>[3, 2, a]<br/>[1, 5, &#x27;&#x27;]</span></pre><p id="638c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces <strong class="md fs">a</strong>. Our decoded stream now becomes <strong class="md fs">a</strong>. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes <strong class="md fs">ab</strong>. For our next triplet we do the same, so our output becomes <strong class="md fs">abc</strong>. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a <strong class="md fs">b</strong>. Which results in <strong class="md fs">bb</strong>. We now have decompressed <strong class="md fs">abcbb</strong>. The next one is [3, 2, a] which results in <strong class="md fs">cba</strong>. Our output becomes <strong class="md fs">abcbbcba</strong>. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an <strong class="md fs">a</strong>. Then we copy that character over five times which becomes <strong class="md fs">aaaaa </strong>so our output becomes <strong class="md fs">abcbbcbaaaaaa</strong>.</p><p id="654f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="1aa2" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj">Now let’s implement it in Javascript</h1><p id="7822" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">You can type along or clone the repo from here: <a class="af mz" href="https://github.com/vincentcorbee/Huffman" rel="noopener ugc nofollow" target="_blank">https://github.com/vincentcorbee/L</a>Z77</p><p id="8cb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.</p><p id="a9c1" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install <strong class="md fs">typescript</strong>, <strong class="md fs">ts-node</strong> and <strong class="md fs">types/nodes</strong> as dev dependencies. The following commands will setup the basic structure that we need for our project.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4a93" class="oz nj fr ow b bf pa pb l pc pd">touch lz77 &amp;&amp; cd lz77<br/><br/>yarn init -y<br/><br/>yarn add -D ts-node typescript @types/node<br/><br/>npx tsc --init<br/><br/>mkdir src &amp;&amp; mkdir src/lib &amp;&amp; mkdir src/samples &amp;&amp; mkdir src/modules<br/><br/>touch src/lib/index.ts &amp;&amp; touch src/index.ts &amp;&amp; touch src/modules/index.ts &amp;&amp; touch src/types.ts</span></pre><p id="cd3e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">First we set up our index files.</p><p id="7ca5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="53be" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./compress&#x27;<br/>export * from &#x27;./decompress&#x27;</span></pre><p id="6e8b" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">lib/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="86e0" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./get-options&#x27;<br/>export * from &#x27;./get-match&#x27;<br/>export * from &#x27;./get-lookahead-buffer&#x27;<br/>export * from &#x27;./get-search-buffer&#x27;<br/>export * from &#x27;./create-array-buffer&#x27;</span></pre><p id="3d13" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">And finally in <strong class="md fs">modules/index.ts</strong> add.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ac7" class="oz nj fr ow b bf pa pb l pc pd">export * from &#x27;./binary-reader&#x27;<br/>export * from &#x27;./binary-writer&#x27;</span></pre><p id="efb7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start by creating <strong class="md fs">compress.ts</strong> in our src folder with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3340" class="oz nj fr ow b bf pa pb l pc pd">import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from &quot;./lib&quot;;<br/>import { LZ77Options, EncodedArray } from &#x27;./types&#x27;<br/><br/>export function compress(<br/>  input: string,<br/>  options?: Partial&lt;LZ77Options&gt;<br/>) {<br/>  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)<br/><br/>  const encodedArray: EncodedArray = []<br/>  const end = input.length - 1<br/><br/>  let searchBuffer = &#x27;&#x27;<br/><br/>  let codingPosition = 0<br/><br/>  while (codingPosition &lt;= end) {<br/>    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)<br/>    const [offset, length, matchedChars] = getMatch(<br/>      searchBuffer,<br/>      lookaheadBuffer<br/>    )<br/><br/>    codingPosition += length<br/><br/>    const nonMatchingChar = input[codingPosition] ?? &#x27;&#x27;<br/><br/>    searchBuffer += matchedChars + nonMatchingChar<br/><br/>    codingPosition++<br/><br/>    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)<br/><br/>    encodedArray.push([offset, length, nonMatchingChar])<br/>  }<br/><br/>  return createArrayBuffer(encodedArray)<br/>}</span></pre><p id="f908" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.</p><p id="debe" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.</p><p id="9216" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.</p><p id="4e36" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">When all the data is processed, create an array buffer and return it.</p><p id="4d4a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In <strong class="md fs">types.ts</strong> add the following.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="3a88" class="oz nj fr ow b bf pa pb l pc pd">export type LZ77Options = {<br/>  searchBufferLength: number<br/>  lookaheadBufferLength: number<br/>}<br/><br/>export type Encoding = [number, number, string]<br/><br/>export type Match = Encoding<br/><br/>export type EncodedArray = Encoding[]</span></pre><p id="a118" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our lib folder create <strong class="md fs">get-options.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8857" class="oz nj fr ow b bf pa pb l pc pd">import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from &quot;../constants&quot;;<br/>import { LZ77Options } from &quot;../types&quot;;<br/><br/>export function getOptions(options: Partial&lt;LZ77Options&gt; = {}): LZ77Options {<br/>  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options<br/><br/>  return {<br/>    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),<br/>    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)<br/>  }<br/>}</span></pre><p id="7b93" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.</p><p id="c7db" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder we create <strong class="md fs">constants.ts</strong> which will hold our max values.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="dc13" class="oz nj fr ow b bf pa pb l pc pd">export const LZ77MaxSearchBufferLength = 0xfff<br/>export const LZ77MaxLookaheadBufferLength = 0xf</span></pre><p id="3c51" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">For our lookahead buffer we create <strong class="md fs">get-lookahead-buffer.ts</strong> in our lib folder.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="801c" class="oz nj fr ow b bf pa pb l pc pd">export function getLookaheadBuffer(<br/>  input: string,<br/>  codingPosition: number,<br/>  lookaheadBufferLength: number,<br/>) {<br/>  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)<br/>}</span></pre><p id="0bb8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Here we are returning a substring of our input data based on our <strong class="md fs">coding position</strong> and our <strong class="md fs">search buffer length</strong>.</p><p id="0f91" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next up the matching phase. This step is a little bit more involved. Create <strong class="md fs">get-match.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="fc31" class="oz nj fr ow b bf pa pb l pc pd">import { Match } from &quot;../types&quot;<br/><br/>export function getMatch(searchBuffer: string, lookaheadBuffer: string) {<br/>  const [char] = lookaheadBuffer<br/><br/>  let offset = 0<br/>  let lengthMatch = 0<br/>  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? &#x27;&#x27; : char<br/><br/>  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match<br/>  <br/>  const searchBufferEnd = searchBuffer.length<br/>  <br/>  let indexLookaheadBuffer = lookaheadBuffer.length<br/><br/>  while (indexLookaheadBuffer &gt; 0) {<br/>    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)<br/><br/>    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)<br/><br/>    if (indexInSearchBuffer &gt; -1) {<br/>      lengthMatch = chars.length<br/><br/>      matchedChars = chars<br/><br/>      offset = searchBufferEnd - indexInSearchBuffer<br/><br/>      /* Get the run length of the matched chars in the lookahead buffer */<br/>      if (indexInSearchBuffer + chars.length === searchBufferEnd) {<br/>        while (indexLookaheadBuffer &lt;= lookaheadBuffer.length) {<br/>          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)<br/>          const match = remainingChars.indexOf(chars) === 0<br/><br/>          if (!match) break<br/><br/>          matchedChars += chars<br/><br/>          indexLookaheadBuffer += chars.length<br/><br/>          lengthMatch = matchedChars.length<br/>        }<br/>      }<br/><br/>      break<br/>    }<br/><br/>    indexLookaheadBuffer--<br/>  }<br/><br/>  return [offset, lengthMatch, matchedChars] as Match<br/>}</span></pre><p id="7ea4" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].</p><p id="5e7e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.</p><p id="19c8" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.</p><p id="e170" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our <strong class="md fs">run length encoding</strong>. We have a simple while loop that continues adding characters to our match as long as we find them.</p><p id="0ab5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if we are done processing, we return our result as [offset, length match, matched characters].</p><p id="64d9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">We still need to create the functions that updates our search buffer. In our lib folder create <strong class="md fs">get-search-buffer-ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="8c53" class="oz nj fr ow b bf pa pb l pc pd">export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {<br/>  const currentLengthSearchBuffer = searchBuffer.length<br/><br/>    /*<br/>      Move the search buffer n positions over based on the difference<br/>      between the current lenght of the search buffer and the max length of our search buffer<br/>    */<br/><br/>    if (currentLengthSearchBuffer &gt;= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)<br/><br/>    return searchBuffer<br/>}</span></pre><p id="0772" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.</p><p id="982e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.</p><p id="7a7d" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our modules folder create <strong class="md fs">binary-reader.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="0561" class="oz nj fr ow b bf pa pb l pc pd">export class BinaryReader {<br/>  protected pos: number<br/>  protected bitCount: number<br/><br/>  view: DataView<br/><br/>  constructor(arrayBuffer: ArrayBuffer) {<br/>    this.view = new DataView(arrayBuffer)<br/>    this.pos = 0<br/>    this.bitCount = 0<br/>  }<br/><br/>  protected getData(type = &#x27;Uint8&#x27;) {<br/>    if (this.view.byteLength &gt; this.pos) {<br/><br/>      // @ts-ignore<br/>      return this.view[`get${type}`](this.pos++)<br/>    }<br/><br/>    throw new RangeError()<br/>  }<br/><br/>  get buffer () {<br/>    return this.view.buffer<br/>  }<br/><br/>  getBytePosition() {<br/>    return this.pos<br/>  }<br/><br/>  seek(pos: number) {<br/>    const oldPos = this.pos<br/><br/>    this.pos = pos<br/><br/>    return oldPos<br/>  }<br/><br/>  peak(index = this.pos + 1) {<br/>    if (this.view.byteLength &gt; index &amp;&amp; index &gt; -1) {<br/>      return this.view.getUint8(index)<br/>    }<br/><br/>    return null<br/>  }<br/><br/>  getUint16() {<br/>    return (this.getData() &lt;&lt; 8) | this.getData()<br/>  }<br/><br/>  getUint8() {<br/>    return this.getData()<br/>  }<br/><br/>  getOffsetLength() {<br/>    const data = this.getUint16()<br/><br/>    return [data &gt;&gt;&gt; 4, data &amp; 0xf]<br/>  }<br/><br/>  getCharacter() {<br/>    const uint8 = this.getData()<br/><br/>    return uint8 ? String.fromCharCode(uint8) : &#x27;&#x27;<br/>  }<br/>}</span></pre><p id="6bbd" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next in the same folder create <strong class="md fs">binary-writer.ts </strong>with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="87c8" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &#x27;./binary-reader&#x27;<br/><br/>export class BinaryWriter extends BinaryReader {<br/>  constructor(length: number) {<br/>    super(new ArrayBuffer(length))<br/>  }<br/><br/>  private setData(data: number, type = &#x27;Uint8&#x27;) {<br/>    let advance = 0<br/><br/>    switch(type) {<br/>      case &#x27;Uint16&#x27;:<br/>        advance = 2<br/>        break;<br/>      default:<br/>        advance = 1<br/>    }<br/><br/>    if (this.view.byteLength &gt; this.pos) {<br/>      // @ts-ignore<br/>      this.view[`set${type}`](this.pos, data)<br/><br/>      this.pos += advance<br/><br/>      return this<br/>    }<br/><br/>    return this<br/>  }<br/><br/>  setUint16(data: number) {<br/>    return this.setData(data, &#x27;Uint16&#x27;)<br/>  }<br/><br/>  setUint8(data: number) {<br/>    return this.setData(data)<br/>  }<br/>}</span></pre><p id="b4cf" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now for the creating of our array buffer we create <strong class="md fs">create-array-buffer.ts</strong> in our lib folder with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="6f83" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryWriter } from &quot;../modules&quot;;<br/>import { EncodedArray } from &quot;../types&quot;;<br/><br/>export function createArrayBuffer(encodedData: EncodedArray) {<br/>  const binaryWriter = new BinaryWriter(encodedData.length * 3)<br/><br/>  encodedData.forEach(([ offset, length, character ]) =&gt; {<br/>    binaryWriter.setUint16(offset &lt;&lt; 4 | length)<br/>    binaryWriter.setUint8(character.charCodeAt(0))<br/>  })<br/><br/>  return binaryWriter.buffer<br/>}</span></pre><p id="3f03" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.</p><p id="bda7" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">That is all for the compression part.</p><h1 id="ab18" class="ni nj fr be nk nl ol nn no np om nr ns nt on nv nw nx oo nz oa ob op od oe of bj">Decompress</h1><p id="d7b9" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">Next we need the ability to decompress our data. So in our src folder create <strong class="md fs">decompress.ts</strong> with the following content.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1ecd" class="oz nj fr ow b bf pa pb l pc pd">import { BinaryReader } from &quot;./modules&quot;<br/><br/>export function decompress(buffer: ArrayBuffer) {<br/>  const binaryReader = new BinaryReader(buffer)<br/><br/>  let output = &#x27;&#x27;<br/><br/>  let index = 0<br/><br/>  while (binaryReader.peak() !== null) {<br/>    const [offset, length] = binaryReader.getOffsetLength()<br/>    const char = binaryReader.getCharacter()<br/><br/>    if (offset === 0 &amp;&amp; length === 0) output += char<br/>    else {<br/>      const startIndex = output.length - offset<br/><br/>      const overflow = Math.max(startIndex + length - output.length, 0)<br/><br/>      const chars = output.substring(startIndex, startIndex + length)<br/><br/>      if (overflow) {<br/>        let runLength = length / (length - overflow)<br/><br/>        while (runLength &gt; 0) {<br/>          output += chars<br/><br/>          runLength--<br/>        }<br/>      } else {<br/>        output += chars<br/>      }<br/><br/>      output += char<br/>    }<br/><br/>    index++<br/>  }<br/><br/>  return output<br/>}</span></pre><p id="1a64" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.</p><p id="5b0c" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.</p><p id="bc71" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Now if all goes well we should have our original data back. So let’s test that out.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><p id="e7e5" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In our src folder create <strong class="md fs">test.ts</strong> with the following content:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="908b" class="oz nj fr ow b bf pa pb l pc pd">import assert from &quot;assert&quot;<br/><br/>import { compress, decompress } from &quot;.&quot;<br/>import { sampleOne as input } from &quot;./samples&quot;<br/><br/>const compressed = compress(input)<br/><br/>const decompressed = decompress(compressed)<br/><br/>assert(decompressed === input)<br/><br/>if (compressed.length &lt; input.length) console.log(&#x27;🎉&#x27;)<br/>else console.log(&#x27;💩&#x27;)</span></pre><p id="c6f9" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.</p><p id="7a46" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on <a class="af mz" href="https://github.com/vincentcorbee/LZ77/tree/main/src/samples" rel="noopener ugc nofollow" target="_blank">github</a>.</p><p id="f085" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">So let’s run some tests. To run the test use de following command in our root folder folder:</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="04aa" class="oz nj fr ow b bf pa pb l pc pd">npx ts-node src/test.ts</span></pre><p id="d735" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s run our test with sample one.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="4e6c" class="oz nj fr ow b bf pa pb l pc pd">15 12<br/>💩</span></pre><p id="dcb6" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.</p><p id="8c1e" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample two</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="1d98" class="oz nj fr ow b bf pa pb l pc pd">21 45<br/>🎉</span></pre><p id="5a00" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.</p><p id="524a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Next sample three.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="668e" class="oz nj fr ow b bf pa pb l pc pd">2823 3059<br/>🎉</span></pre><p id="8655" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Ok, we still achieved some compression with a ratio of 1.08.</p><p id="6f44" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s see what sample four gives us.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="e883" class="oz nj fr ow b bf pa pb l pc pd">22374 24543<br/>🎉</span></pre><p id="3579" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Looks similar to last result with a ratio of 1.1.</p><p id="e451" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Let’s try sample five.</p><pre class="oq or os ot ou ov ow ox bo oy ba bj"><span id="cf99" class="oz nj fr ow b bf pa pb l pc pd">21 25<br/>🎉</span></pre><p id="c02f" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">Mew, still some compression but only a ratio of 1.19.</p><p id="647a" class="pw-post-body-paragraph mb mc fr md b me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my fk bj">As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.</p></div></div></div><div class="ab ca na nb nc nd" role="separator"><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng nh"></span><span class="ne bx bl nf ng"></span></div><div class="fk fl fm fn fo"><div class="ab ca"><div class="ch bg ew ex ey ez"><h1 id="c54a" class="ni nj fr be nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od oe of bj"><strong class="al">Conclusion</strong></h1><p id="518b" class="pw-post-body-paragraph mb mc fr md b me og mg mh mi oh mk ml mm oi mo mp mq oj ms mt mu ok mw mx my fk bj">So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.</p></div></div></div></div></section></div></div></article><div class="ab ca"><div class="ch bg ew ex ey ez"></div></div></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="pe pf ab hy"><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/javascript?source=post_page-----cd2583d2a8bd---------------javascript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">JavaScript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/typescript?source=post_page-----cd2583d2a8bd---------------typescript-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Typescript</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/computer-science?source=post_page-----cd2583d2a8bd---------------computer_science-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Computer Science</div></a></div><div class="pg ab"><a class="ph ax am ao" rel="noopener follow" href="/tag/compression?source=post_page-----cd2583d2a8bd---------------compression-----------------"><div class="pi ee cw pj fb pk pl be b bf z bj pm">Compression</div></a></div></div></div></div><div class="l"></div><footer class="pn po pp pq pr ps pt pu pv ab q pw px c"><div class="l ae"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ab co py"><div class="ab q jh"><div class="pz l"><span class="l qa qb qc e d"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span><span class="l h g f qd qe"><div class="ab q jh ji"><div class="pw-multi-vote-icon ee jj jk jl jm"><div class=""><div class="jn jo jp jq jr js jt am ju jv jw jm"><svg width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.37.83L12 3.28l.63-2.45h-1.26zM15.42 1.84l-1.18-.39-.34 2.5 1.52-2.1zM9.76 1.45l-1.19.4 1.53 2.1-.34-2.5zM20.25 11.84l-2.5-4.4a1.42 1.42 0 0 0-.93-.64.96.96 0 0 0-.75.18c-.25.19-.4.42-.45.7l.05.05 2.35 4.13c1.62 2.95 1.1 5.78-1.52 8.4l-.46.41c1-.13 1.93-.6 2.78-1.45 2.7-2.7 2.51-5.59 1.43-7.38zM12.07 9.01c-.13-.69.08-1.3.57-1.77l-2.06-2.07a1.12 1.12 0 0 0-1.56 0c-.15.15-.22.34-.27.53L12.07 9z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M14.74 8.3a1.13 1.13 0 0 0-.73-.5.67.67 0 0 0-.53.13c-.15.12-.59.46-.2 1.3l1.18 2.5a.45.45 0 0 1-.23.76.44.44 0 0 1-.48-.25L7.6 6.11a.82.82 0 1 0-1.15 1.15l3.64 3.64a.45.45 0 1 1-.63.63L5.83 7.9 4.8 6.86a.82.82 0 0 0-1.33.9c.04.1.1.18.18.26l1.02 1.03 3.65 3.64a.44.44 0 0 1-.15.73.44.44 0 0 1-.48-.1L4.05 9.68a.82.82 0 0 0-1.4.57.81.81 0 0 0 .24.58l1.53 1.54 2.3 2.28a.45.45 0 0 1-.64.63L3.8 13a.81.81 0 0 0-1.39.57c0 .22.09.43.24.58l4.4 4.4c2.8 2.8 5.5 4.12 8.68.94 2.27-2.28 2.71-4.6 1.34-7.1l-2.32-4.08z"></path></svg></div></div></div><div class="pw-multi-vote-count l jx jy jz ka kb kc kd"><p class="be b dx z dw"><span class="jo">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao jn ke kf ab q ef kg kh" aria-label="responses"><svg width="24" height="24" viewBox="0 0 24 24" class="ki"><path d="M18 16.8a7.14 7.14 0 0 0 2.24-5.32c0-4.12-3.53-7.48-8.05-7.48C7.67 4 4 7.36 4 11.48c0 4.13 3.67 7.48 8.2 7.48a8.9 8.9 0 0 0 2.38-.32c.23.2.48.39.75.56 1.06.69 2.2 1.04 3.4 1.04.22 0 .4-.11.48-.29a.5.5 0 0 0-.04-.52 6.4 6.4 0 0 1-1.16-2.65v.02zm-3.12 1.06l-.06-.22-.32.1a8 8 0 0 1-2.3.33c-4.03 0-7.3-2.96-7.3-6.59S8.17 4.9 12.2 4.9c4 0 7.1 2.96 7.1 6.6 0 1.8-.6 3.47-2.02 4.72l-.2.16v.26l.02.3a6.74 6.74 0 0 0 .88 2.4 5.27 5.27 0 0 1-2.17-.86c-.28-.17-.72-.38-.94-.59l.01-.02z"></path></svg></button></div></div></div></div><div class="ab q"><div class="nh l hv"><div><div class="bl" aria-hidden="false"><button aria-controls="addToCatalogBookmarkButton" aria-expanded="false" aria-label="Add to list bookmark button" data-testid="footerBookmarkButton" class="af ef ah ai aj ak al kk an ao ap hs kl km kn" disabled=""><svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="ko"><path d="M17.5 1.25a.5.5 0 0 1 1 0v2.5H21a.5.5 0 0 1 0 1h-2.5v2.5a.5.5 0 0 1-1 0v-2.5H15a.5.5 0 0 1 0-1h2.5v-2.5zm-11 4.5a1 1 0 0 1 1-1H11a.5.5 0 0 0 0-1H7.5a2 2 0 0 0-2 2v14a.5.5 0 0 0 .8.4l5.7-4.4 5.7 4.4a.5.5 0 0 0 .8-.4v-8.5a.5.5 0 0 0-1 0v7.48l-5.2-4a.5.5 0 0 0-.6 0l-5.2 4V5.75z" fill="#000"></path></svg></button></div></div></div><div class="nh l hv"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M15.22 4.93a.42.42 0 0 1-.12.13h.01a.45.45 0 0 1-.29.08.52.52 0 0 1-.3-.13L12.5 3v7.07a.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5V3.02l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.8a.42.42 0 0 1 .07.5zm-.1.14zm.88 2h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.14c.1.1.15.22.15.35a.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9V8.96c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1z" fill="currentColor"></path></svg></button></div></div></div></div><div class="bl" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="More options" data-testid="footerStoryOptionsButton" class="af ef ah ai aj ak al kk an ao ap hs kw kx kh ky"><svg width="24" height="24" viewBox="0 0 24 24" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.39 12c0 .55.2 1.02.59 1.41.39.4.86.59 1.4.59.56 0 1.03-.2 1.42-.59.4-.39.59-.86.59-1.41 0-.55-.2-1.02-.6-1.41A1.93 1.93 0 0 0 6.4 10c-.55 0-1.02.2-1.41.59-.4.39-.6.86-.6 1.41zM10 12c0 .55.2 1.02.58 1.41.4.4.87.59 1.42.59.54 0 1.02-.2 1.4-.59.4-.39.6-.86.6-1.41 0-.55-.2-1.02-.6-1.41a1.93 1.93 0 0 0-1.4-.59c-.55 0-1.04.2-1.42.59-.4.39-.58.86-.58 1.41zm5.6 0c0 .55.2 1.02.57 1.41.4.4.88.59 1.43.59.57 0 1.04-.2 1.43-.59.39-.39.57-.86.57-1.41 0-.55-.2-1.02-.57-1.41A1.93 1.93 0 0 0 17.6 10c-.55 0-1.04.2-1.43.59-.38.39-.57.86-.57 1.41z" fill="currentColor"></path></svg></button></div></div></div></div></div></div></div></div></footer><div class="qf qg qh qi qj l bw"><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="ck ab qk co"><div class="ab hc"><a rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><div class="l ql qm bx qn hg"><div class="l ee"><img alt="Vincentcorbee" class="l eq bx qo qp cw" src="https://miro.medium.com/v2/resize:fill:144:144/1*UheBJwqZseSYK985B1KgQA@2x.jpeg" width="72" height="72" loading="lazy"/><div class="hh bx l qo qp eo n hi ep"></div></div></div></a></div><div class="j i d"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="/@vincentcorbee?source=post_page-----cd2583d2a8bd--------------------------------"><h2 class="pw-author-name be rl rm rn ro bj"><span class="fk">Written by <!-- -->Vincentcorbee</span></h2></a></div><div class="pg ab"><div class="l hv"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar hn" rel="noopener follow" href="/@vincentcorbee/followers?source=post_page-----cd2583d2a8bd--------------------------------">10 Followers</a></span></div></div><div class="rp l"></div></div><div class="h k"><div class="ab"><button class="be b bf z qq pi qr qs qt qu qv qw qx qy qz hs ra rb rc rd re rf eq bl rg rh">Follow</button><div class="dv l"><div><div><div class="bl" aria-hidden="false"><div class="l"><button class="be b bf z qq am qr qs qt qu qv qw qx qy qz hs ra rb rc re rf eq bl rg rh" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="ri rj rk"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5L19 20l4-3"></path></svg></button></div></div></div></div></div></div></div></div><div class="rq bg rr lq lr ls lt lu"></div></div></div><div class="h k j"><div class="rq bg rr rs"></div><div class="ab ca"><div class="ch bg ew ex ey ez"><div class="rt ab jh hy"><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Help</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Status</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/about?autoplay=1&amp;source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">About</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Careers</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Blog</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Privacy</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Terms</p></a></div><div class="ru rv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----cd2583d2a8bd--------------------------------" rel="noopener follow"><p class="be b dx z dw">Text to speech</p></a></div><div class="ru l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" rel="noopener follow" href="/business?source=post_page-----cd2583d2a8bd--------------------------------"><p class="be b dx z dw">Teams</p></a></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20240326-200917-1e3e83383a"</script><script>window.__GRAPHQL_URI__ = "https://medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"cache":{"experimentGroupSet":true,"reason":"User is logged in","group":"disabled","tags":["group-edgeCachePosts","post-cd2583d2a8bd","user-78a7b5569c1"],"serverVariantState":"","middlewareEnabled":true,"cacheStatus":"DYNAMIC","shouldUseCache":false,"vary":[],"loHomepageEnabled":false,"updatedPostPreviewsEnabled":false,"customMocPreviewWeightThreshold":"control","lohpBgColorGroup":"control","lohpButtonGroup":"control","lohpCopyGroup":"control"},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"isFirefox":false,"routingEntity":{"type":"DEFAULT","explicit":false},"viewerIsBot":false},"debug":{"requestId":"241e74d5-f467-4844-a600-7d82dbebc22c","hybridDevServices":[],"originalSpanCarrier":{"ot-tracer-spanid":"1691f4971ff0fc31","ot-tracer-traceid":"3ac274274cdb95e1","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","host":"medium.com","hostname":"medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false},"config":{"nodeEnv":"production","version":"main-20240326-200917-1e3e83383a","target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","recaptchaEnterpriseKeyId":"6Le-uGgpAAAAAPprRaokM8AKthQ9KNGdoxaGUvVp","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20240326-200917-1e3e83383a","commit":"1e3e83383a89027142d2cc2881594480947c8b4d"}},"datacenter":"us"},"googleAnalyticsCode":"G-7JY7T788PK","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumMastodonDomainName":"me.dm","mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","merchantAccountId":{"usd":"AMediumCorporation_instant","eur":"amediumcorporation_EUR","cad":"amediumcorporation_CAD"},"publicKey":"ds2nn34bg2z7j5gd","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","monthlyPremium":"fa741a9b47a2","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7","yearlyPremium":"e21bd2c12166","monthlyCad":"p52orjkaceei","yearlyCad":"h4q9g2up9ktt"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06","fiftyPercentOffOneYear":"FIFTY_PERCENT_OFF_ONE_YEAR"},"3DSecureVersion":"2","defaultCurrency":"usd","providerPlanIdCurrency":{"4ycw":"usd","rz3b":"usd","3kqm":"usd","jzw6":"usd","c2q2":"usd","nnsw":"usd","q8qw":"usd","d9y6":"usd","fx7w":"cad","nwf2":"cad"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","log":{"json":true,"level":"info"},"imageUploadMaxSizeMb":25,"staffPicks":{"title":"Staff Picks","catalogId":"c7bc6e1ee00f"}},"session":{"xsrf":"rt8ZrXhsmzyC2Pgn"}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","isLoggedIn":true,"variantFlags":[{"__typename":"VariantFlag","name":"available_monthly_premium_plan","valueType":{"__typename":"VariantFlagString","value":"12a660186432"}},{"__typename":"VariantFlag","name":"enable_deprecate_legacy_providers_v3","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_autorefresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_marketing_emails","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_access","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_monthly_plan","valueType":{"__typename":"VariantFlagString","value":"60e220181034"}},{"__typename":"VariantFlag","name":"enable_rito_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_sign_in","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_integration","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_switch_plan_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"glyph_font_set","valueType":{"__typename":"VariantFlagString","value":"m2-unbound-source-serif-pro"}},{"__typename":"VariantFlag","name":"android_two_hour_refresh","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_post_referrers","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_send_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_maim_the_meter","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_create_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_premium_tier_badge","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sharer_validate_post_share_key","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_one_tap","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pre_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_home_post_menu","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_seamless_social_sharing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_programming_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_iceland_forced_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signup_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"enable_premium_tier","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_client","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_avatar_upload","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pill_based_home_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_aggregator_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_button","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"ios_social_share_sheet","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_syntax_highlight","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_apple_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_display_paywall_after_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_medium2_kbfd","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_editor_new_publishing_flow","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold_li","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_footer_app_buttons","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_verifications_service","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_sprig","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_yearly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_custom_moc_preview_weight_threshold","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members_username_selection","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_dashboard_referred_earnings","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_entities_to_follow_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_easy_resubscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_signup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"coronavirus_topic_recirc","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_reading_history","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_rating_prompt_stories_read_threshold","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"reengagement_notification_duration","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_braintree_paypal","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_simplified_digest_v2_b","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lohp_bg_color","valueType":{"__typename":"VariantFlagString","value":"control"}},{"__typename":"VariantFlag","name":"enable_creator_welcome_email","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_in_app_free_trial","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_remove_twitter_onboarding_step","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"textshots_userid","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_tipping_v0_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_newsletter_lo_flow_custom_domains","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_verified_book_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_digest_tagline","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_susi_redesign_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_premium_plan","valueType":{"__typename":"VariantFlagString","value":"4a442ace1476"}},{"__typename":"VariantFlag","name":"enable_automod","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"onboarding_tags_from_top_views","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"skip_fs_cache_user_vals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_apple_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_archive_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_enable_friend_links_postpage_banners","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_aurora_pub_follower_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_programming","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_legacy_feed_in_iceland","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"allow_test_auth","valueType":{"__typename":"VariantFlagString","value":"disallow"}},{"__typename":"VariantFlag","name":"enable_google_webhook","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"disable_partner_program_enrollment","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"signin_services","valueType":{"__typename":"VariantFlagString","value":"twitter,facebook,google,email,google-fastidv,google-one-tap,apple"}},{"__typename":"VariantFlag","name":"ios_enable_lock_responses","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"price_smoke_test_monthly","valueType":{"__typename":"VariantFlagString","value":""}},{"__typename":"VariantFlag","name":"enable_eventstats_event_processing","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_starspace","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_miro_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_new_lohp_copy","valueType":{"__typename":"VariantFlagString","value":"group_3"}},{"__typename":"VariantFlag","name":"enable_auto_follow_on_subscribe","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_lists_v2","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_homepage","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"reader_fair_distribution_non_qp","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_verified_author","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_response_markup","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rito_percentage_use_cleansweep","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"android_enable_image_sharer","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_server_upstream_deadlines","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ml_rank_rex_anno","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tag_recs","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_lite_continue_this_thread","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"limit_user_follows","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"crm_send_contact_to_sendgrid","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"redefined_top_posts","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"can_receive_tips_v0","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"web_enable_syntax_highlighting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tick_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"browsable_stream_config_bucket","valueType":{"__typename":"VariantFlagString","value":"curated-topics"}},{"__typename":"VariantFlag","name":"enable_cache_less_following_feed","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tipping_v0_android","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_google_play_purchase_on_backend","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_group_gifting","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_dynamic_aspirational_paywall","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recaptcha_enterprise","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_branch_io","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_ios_dynamic_paywall_aspiriational","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_import","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_recirc_model","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_updated_new_user_onboarding","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_trial_membership","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_app_flirty_thirty","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_braintree_google_pay","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_members_only_audio","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_android_offline_reading","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_friend_links_creation","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_pp_v4","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_speechify_ios","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_mastodon_for_members","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_moc_load_processor_c","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_tribute_landing_page","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"rex_generator_max_candidates","valueType":{"__typename":"VariantFlagNumber"}},{"__typename":"VariantFlag","name":"enable_speechify_widget","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"ios_iceland_nux","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"android_enable_topic_portals","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"available_annual_plan","valueType":{"__typename":"VariantFlagString","value":"2c754bcc2995"}},{"__typename":"VariantFlag","name":"covid_19_cdc_banner","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_rex_new_push_notification_endpoint","valueType":{"__typename":"VariantFlagBoolean","value":true}},{"__typename":"VariantFlag","name":"enable_author_cards_byline","valueType":{"__typename":"VariantFlagBoolean","value":true}}],"viewer":{"__ref":"User:1ca4bcbd7743"},"collectionByDomainOrSlug({\"domainOrSlug\":\"medium.com\"})":null,"postResult({\"id\":\"cd2583d2a8bd\"})":{"__ref":"Post:cd2583d2a8bd"}},"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:1ca4bcbd7743-viewerId:1ca4bcbd7743","createdAt":1698984086439},"User:1ca4bcbd7743":{"__typename":"User","id":"1ca4bcbd7743","allowEmailAddressSharingEditorWriter":false,"atsQualifiedAt":0,"dismissableFlags":[],"emailObfuscated":"ch••••••••••••••@gmail.com","geolocation":{"__typename":"Geolocation","country":"IN"},"hasGroupGiftingEnabled":false,"hasPastMemberships":false,"hasSubdomain":false,"imageId":"0*B6uJ2u7UnHMBNvpr","isEligibleToImportEmails":false,"isEligibleToViewNewResponses":true,"isMembershipTrialEligible":true,"isSuspended":false,"membership":null,"name":"Chauhan Ayush B","partnerProgramEnrollment":null,"postSubscribeMembershipUpsellShownAt":0,"styleEditorOnboardingVersionSeen":0,"twitterScreenName":"","unverifiedEmail":"","username":"chauhan.ayush.b2","viewerEdge":{"__ref":"UserViewerEdge:userId:1ca4bcbd7743-viewerId:1ca4bcbd7743"}},"LinkedAccounts:78a7b5569c1":{"__typename":"LinkedAccounts","mastodon":null,"id":"78a7b5569c1"},"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743":{"__typename":"UserViewerEdge","id":"userId:78a7b5569c1-viewerId:1ca4bcbd7743","isFollowing":false,"isUser":false,"isMuting":false},"NewsletterV3:f0009fdc5dad":{"__typename":"NewsletterV3","id":"f0009fdc5dad","type":"NEWSLETTER_TYPE_AUTHOR","slug":"78a7b5569c1","name":"78a7b5569c1","collection":null,"user":{"__ref":"User:78a7b5569c1"}},"User:78a7b5569c1":{"__typename":"User","id":"78a7b5569c1","name":"Vincentcorbee","username":"vincentcorbee","newsletterV3":{"__ref":"NewsletterV3:f0009fdc5dad"},"linkedAccounts":{"__ref":"LinkedAccounts:78a7b5569c1"},"isSuspended":false,"imageId":"1*UheBJwqZseSYK985B1KgQA@2x.jpeg","mediumMemberAt":1616314210000,"verifications":{"__typename":"VerifiedInfo","isBookAuthor":false},"socialStats":{"__typename":"SocialStats","followerCount":10},"customDomainState":null,"hasSubdomain":false,"bio":"","isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:78a7b5569c1-viewerId:1ca4bcbd7743"},"viewerIsUser":false,"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"membership":{"__ref":"Membership:820ac4906a2d"},"twitterScreenName":""},"Topic:63c6f1f93ee":{"__typename":"Topic","slug":"javascript","id":"63c6f1f93ee","name":"Javascript"},"Paragraph:a2673db5d6a5_0":{"__typename":"Paragraph","id":"a2673db5d6a5_0","name":"2130","type":"H3","href":null,"layout":null,"metadata":null,"text":"LZ77 compression in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg":{"__typename":"ImageMetadata","id":"1*lAxi1TrfT8UNKj0KSUo6JA.jpeg","originalHeight":263,"originalWidth":727,"focusPercentX":null,"focusPercentY":null,"alt":null},"Paragraph:a2673db5d6a5_1":{"__typename":"Paragraph","id":"a2673db5d6a5_1","name":"09b6","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"text":"","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_2":{"__typename":"Paragraph","id":"a2673db5d6a5_2","name":"a413","type":"P","href":null,"layout":null,"metadata":null,"text":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream objects. One such filter that pdf supports is FlateDecode which uses the deflate compression algorithm. Deflate is also what is used in Gzip. So with fresh enthusiasm for the challenge ahead I looked for the rfc. There were a few parts in constructing the bit stream that stood out, Huffman encoding and LZ77. Since I already knew how Huffman coding works (kinda), I set my sights on LZ77. So what is LZ77 and how do you implement it from scratch in Javascript(ish)? Let’s find out.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":346,"end":349,"href":"https:\u002F\u002Fwww.rfc-editor.org\u002Frfc\u002Frfc1951","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":0,"end":620,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_3":{"__typename":"Paragraph","id":"a2673db5d6a5_3","name":"96cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Side note. The first fun fact I discovered is that deflate doesn’t use LZ77 compression at all.. 💩 It uses a derivation of that algorithm named LZSS. So the end result is useless for deflate, but hey, we learned something.🤓 The main difference is that while LZ77 outputs items as a triplet in the form of [offset, length, character]. LZSS outputs based ont he length of the match, either a literal or a tuple in the form of [offset, length]. I understand if this doesn’t make sense now, but it will, I promise — hopefully. 🤞🏻","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_4":{"__typename":"Paragraph","id":"a2673db5d6a5_4","name":"c2af","type":"H3","href":null,"layout":null,"metadata":null,"text":"So what is LZ77","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_5":{"__typename":"Paragraph","id":"a2673db5d6a5_5","name":"4123","type":"P","href":null,"layout":null,"metadata":null,"text":"LZ77 is a lossless compression algorithm created by Lempel and Ziv in 1977. The LZ77 algorithm compresses data by replacing duplicate sections of data with metadata in the form of a triplet [ offset, length, character ].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_6":{"__typename":"Paragraph","id":"a2673db5d6a5_6","name":"1494","type":"P","href":null,"layout":null,"metadata":null,"text":"First some key terms need to be addressed:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_7":{"__typename":"Paragraph","id":"a2673db5d6a5_7","name":"5520","type":"P","href":null,"layout":null,"metadata":null,"text":"coding position\nThis is the position in the input stream for the character currently being encoded","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_8":{"__typename":"Paragraph","id":"a2673db5d6a5_8","name":"68a0","type":"P","href":null,"layout":null,"metadata":null,"text":"search buffer\nThe search buffer is a history of processed characters with a fixed length in which the algorithm searches to match for duplicate segments.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":14,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_9":{"__typename":"Paragraph","id":"a2673db5d6a5_9","name":"772b","type":"P","href":null,"layout":null,"metadata":null,"text":"lookahead buffer\nThe lookahead buffer is a fixed length set af characters after the current character into which te algorithm looks to find the longest match possible. So for example if the current character being processed is a A after that comes the characters B C D E. If A matches, it will try and match as much characters as it can in the lookahead buffer.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":17,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":229,"end":231,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":263,"end":272,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_10":{"__typename":"Paragraph","id":"a2673db5d6a5_10","name":"060b","type":"P","href":null,"layout":null,"metadata":null,"text":"sliding window\nThe three parts above are called the sliding window. It is called sliding because it moves over the input stream as more characters are processed.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_11":{"__typename":"Paragraph","id":"a2673db5d6a5_11","name":"15b1","type":"H3","href":null,"layout":null,"metadata":null,"text":"So how does this process work?","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":30,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_12":{"__typename":"Paragraph","id":"a2673db5d6a5_12","name":"8782","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s use the following as our input: abcbbcbaaaaaa","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":37,"end":51,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_13":{"__typename":"Paragraph","id":"a2673db5d6a5_13","name":"9fc3","type":"P","href":null,"layout":null,"metadata":null,"text":"First let’s define the size of our sliding window. Let’s say we have a search buffer of 6 characters and a lookahead buffer of 5 characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":107,"end":123,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_14":{"__typename":"Paragraph","id":"a2673db5d6a5_14","name":"8f61","type":"P","href":null,"layout":null,"metadata":null,"text":"Then the algorithms starts with moving the coding position to the start of the input. This means that our search buffer is empty, our current coding position points at character a and our lookahead buffer contains babcb.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":43,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":66,"end":71,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":79,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":178,"end":180,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":214,"end":219,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_15":{"__typename":"Paragraph","id":"a2673db5d6a5_15","name":"241d","type":"P","href":null,"layout":null,"metadata":null,"text":"Thus our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_16":{"__typename":"Paragraph","id":"a2673db5d6a5_16","name":"18f3","type":"PRE","href":null,"layout":null,"metadata":null,"text":"source\na b c b b c b a a a a a a\n\nsliding window\na b c b b c\n0 1 2 3 4 5","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":49,"end":50,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_17":{"__typename":"Paragraph","id":"a2673db5d6a5_17","name":"1f3d","type":"P","href":null,"layout":null,"metadata":null,"text":"Now, since our search buffer is empty we can’t find any matches. So what do we output when we don’t have a match? We output a triplet in the form of: [0, 0, character]. This means the offset is zero and the length is zero.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_18":{"__typename":"Paragraph","id":"a2673db5d6a5_18","name":"989b","type":"P","href":null,"layout":null,"metadata":null,"text":"So we have our first output: [0, 0, a]. 🥹","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_19":{"__typename":"Paragraph","id":"a2673db5d6a5_19","name":"fddf","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_20":{"__typename":"Paragraph","id":"a2673db5d6a5_20","name":"0d10","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a b c b b c b a a a a a a\n\n sliding window\n a b c b b c e\n-1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_21":{"__typename":"Paragraph","id":"a2673db5d6a5_21","name":"f959","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the character a. So let’s repeat the process for b. We look in our search buffer and can’t find a match. So again we output: [0, 0, b] and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":81,"end":82,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":116,"end":117,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_22":{"__typename":"Paragraph","id":"a2673db5d6a5_22","name":"8071","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b c b b c b a a a a a a\n\n sliding window\n a  b c b b c b a\n-2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":59,"end":60,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_23":{"__typename":"Paragraph","id":"a2673db5d6a5_23","name":"dda7","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at c and our search buffer now contains the characters ab. So let us again repeat the process. We look in our search buffer and.. Still nothing, so we emit: [0, 0, c].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":84,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_24":{"__typename":"Paragraph","id":"a2673db5d6a5_24","name":"d411","type":"P","href":null,"layout":null,"metadata":null,"text":"Our sliding window moves over one position and our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_25":{"__typename":"Paragraph","id":"a2673db5d6a5_25","name":"7504","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c b b c b a a a a a a\n\n sliding window\n a  b  c b b c b a a\n-3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":63,"end":64,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_26":{"__typename":"Paragraph","id":"a2673db5d6a5_26","name":"5420","type":"P","href":null,"layout":null,"metadata":null,"text":"Our coding position is now at b and our search buffer now contains the characters abc. So let us again repeat the process. We look in our search buffer and.. We found a match at -2! Now we will continue to look in our look ahead buffer to try and find the longest match possible. The next character in our lookahead buffer is b. So we check for bb and.. sadly no match. Since we have a match we output [2, 1, b]. We go back 2 with a length of one and emit the next character which is also a b.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":30,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":82,"end":85,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":326,"end":327,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":345,"end":347,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":491,"end":492,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_27":{"__typename":"Paragraph","id":"a2673db5d6a5_27","name":"9ee3","type":"P","href":null,"layout":null,"metadata":null,"text":"Now our state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_28":{"__typename":"Paragraph","id":"a2673db5d6a5_28","name":"5c76","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n a  b  c  b  b c b a a a a\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":71,"end":72,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_29":{"__typename":"Paragraph","id":"a2673db5d6a5_29","name":"5d63","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s repeat the process again. What can we match? Wel have a match for cb in our search buffer at -3. So we will output [3, 2, a].","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":72,"end":74,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_30":{"__typename":"Paragraph","id":"a2673db5d6a5_30","name":"ebd2","type":"P","href":null,"layout":null,"metadata":null,"text":"Our state now looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_31":{"__typename":"Paragraph","id":"a2673db5d6a5_31","name":"88cf","type":"PRE","href":null,"layout":null,"metadata":null,"text":" source\n a  b  c  b  b c b a a a a a a\n\n sliding window\n       c  b  b  c  b  a a a a a a\n      -6 -5 -4 -3 -2 -1 0 1 2 3 4\n\n outputs\n [0, 0, a]\n [0, 0, b]\n [0, 0, c]\n [2, 1, b]\n [3, 2, a]","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":80,"end":81,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_32":{"__typename":"Paragraph","id":"a2673db5d6a5_32","name":"51c8","type":"P","href":null,"layout":null,"metadata":null,"text":"Observe since the size of our search buffer had a length of six we have lost some of our previously processed characters. Also since we only have five unprocessed characters remaining, our lookahead buffer only contains four characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_33":{"__typename":"Paragraph","id":"a2673db5d6a5_33","name":"c8b8","type":"P","href":null,"layout":null,"metadata":null,"text":"Let us again repeat the process. We take our character a and see that it matches on -1. We matched a and reach the end of our search buffer. So do we repeat the process again for the last four characters? The answer in this scenario is no!","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":55,"end":56,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":99,"end":101,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_34":{"__typename":"Paragraph","id":"a2673db5d6a5_34","name":"85a1","type":"P","href":null,"layout":null,"metadata":null,"text":"The reason being that the length of our match could overlap previously seen characters. This works because within the algorithm we get run length encoding for free. What this means is that we can continue looking for matches in the lookahead buffer as long as the match repeats. In our case, we have a repeating pattern of a that starts at -1 and continues till the end of our search buffer. Thus although our search buffers ends, we can continue to process this repeating pattern and add it to the length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":135,"end":154,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":323,"end":324,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_35":{"__typename":"Paragraph","id":"a2673db5d6a5_35","name":"7df0","type":"P","href":null,"layout":null,"metadata":null,"text":"So our length becomes 5, i.e. 5 times an a. Now our output looks like this: [1, 5, ‘’]. We output an empty string because we have processed all our characters.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":41,"end":42,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_36":{"__typename":"Paragraph","id":"a2673db5d6a5_36","name":"6ace","type":"P","href":null,"layout":null,"metadata":null,"text":"Our finished state looks like this:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_37":{"__typename":"Paragraph","id":"a2673db5d6a5_37","name":"9fdf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"outputs\n[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_38":{"__typename":"Paragraph","id":"a2673db5d6a5_38","name":"06ab","type":"P","href":null,"layout":null,"metadata":null,"text":"And we are done! 🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_39":{"__typename":"Paragraph","id":"a2673db5d6a5_39","name":"6fd1","type":"P","href":null,"layout":null,"metadata":null,"text":"As you have seen we even emit a triplet for unmatched characters. What this means is that if we take our first character a, which is 8 bits, we actually expand the original data because we also need to store the offset and length. So in our example for the first three characters we already used more bits than the actual size of the original data. So did we actually achieved compression? Well that further depends on how we store the offset en length. If we cram them in 16 bits, we need at least 24 bits per triplet. So if we look at our output, we need 6 * 24 = 144 bits. Our original data contained 8 * 13 = 104 bits. Hurray, we actually expanded our original data. 💩","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":121,"end":122,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_40":{"__typename":"Paragraph","id":"a2673db5d6a5_40","name":"45d3","type":"P","href":null,"layout":null,"metadata":null,"text":"It becomes clear that with this scheme, we need to store at least three characters in our triplet to break even. The LZSS scheme tries to do away whit this overhead and stores a match as just a length distance pair and only if storing this metadata is less than just storing the original character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_41":{"__typename":"Paragraph","id":"a2673db5d6a5_41","name":"501e","type":"P","href":null,"layout":null,"metadata":null,"text":"Wel great we compress it, but how do we get our original data back?","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_42":{"__typename":"Paragraph","id":"a2673db5d6a5_42","name":"5518","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_43":{"__typename":"Paragraph","id":"a2673db5d6a5_43","name":"9a94","type":"P","href":null,"layout":null,"metadata":null,"text":"To decompress we convert each triplet back into a piece of the original data and add it to the result.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_44":{"__typename":"Paragraph","id":"a2673db5d6a5_44","name":"6ab9","type":"P","href":null,"layout":null,"metadata":null,"text":"The outputs we have produced in the compression fase where:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_45":{"__typename":"Paragraph","id":"a2673db5d6a5_45","name":"5dbf","type":"PRE","href":null,"layout":null,"metadata":null,"text":"[0, 0, a]\n[0, 0, b]\n[0, 0, c]\n[2, 1, b]\n[3, 2, a]\n[1, 5, '']","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"DISABLED","lang":null},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_46":{"__typename":"Paragraph","id":"a2673db5d6a5_46","name":"638c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our first triplet always has a offset of 0 and a length of zero, we simply emit the character. So our first triplet produces a. Our decoded stream now becomes a. Our next triplet is [0, 0, b]. Again, since are offset is 0 and our length is 0, we emit the character. Our output now becomes ab. For our next triplet we do the same, so our output becomes abc. When we look at our third triplet we have a offset of 2 and a length of 1. Now how do we process this? Remember that our offset is de position in our search buffer. But you might ask, where is our search buffer? Well, that is all the data we already decompressed. For our triplet [2, 1, b] we go back 2 positions and read one character and emit a b. Which results in bb. We now have decompressed abcbb. The next one is [3, 2, a] which results in cba. Our output becomes abcbbcba. Now for our last one [1, 5, ‘’]. If you remember this one was special because it’s length was bigger than the match in the search buffer. So how do we process this one? We go back one which is an a. Then we copy that character over five times which becomes aaaaa so our output becomes abcbbcbaaaaaa.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":131,"end":132,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":165,"end":166,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":295,"end":297,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":358,"end":361,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":710,"end":711,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":730,"end":732,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":759,"end":764,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":809,"end":812,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":833,"end":841,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1039,"end":1040,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1100,"end":1106,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":1128,"end":1141,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_47":{"__typename":"Paragraph","id":"a2673db5d6a5_47","name":"654f","type":"P","href":null,"layout":null,"metadata":null,"text":"And if we compare it to our input in the compression fase we can see that it matches. So now we have compressed and decompressed data with the LZ77 algorithm. Our next step is to figure out how to implement this in Javascript. 🤔","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_48":{"__typename":"Paragraph","id":"a2673db5d6a5_48","name":"1aa2","type":"H3","href":null,"layout":null,"metadata":null,"text":"Now let’s implement it in Javascript","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_49":{"__typename":"Paragraph","id":"a2673db5d6a5_49","name":"7822","type":"P","href":null,"layout":null,"metadata":null,"text":"You can type along or clone the repo from here: https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":48,"end":82,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FHuffman","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_50":{"__typename":"Paragraph","id":"a2673db5d6a5_50","name":"8cb7","type":"P","href":null,"layout":null,"metadata":null,"text":"I like to point out this is not a comprehensive implementation. It is intended to learn about the algorithm and how we can go about implementing it in Javascript. I try to be as descriptive as possible in my function and variable naming so hopefully the code itself can in large part be self explanatory. Also this implementation is based on the premise that every character in the input can be read as an unsigned 8 bit integer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_51":{"__typename":"Paragraph","id":"a2673db5d6a5_51","name":"a9c1","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s get typing. We are not going to install any dependencies for our actual implementation. But since we are going to be using Typescript we are going to install typescript, ts-node and types\u002Fnodes as dev dependencies. The following commands will setup the basic structure that we need for our project.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":167,"end":177,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":179,"end":186,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":191,"end":202,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_52":{"__typename":"Paragraph","id":"a2673db5d6a5_52","name":"4a93","type":"PRE","href":null,"layout":null,"metadata":null,"text":"touch lz77 && cd lz77\n\nyarn init -y\n\nyarn add -D ts-node typescript @types\u002Fnode\n\nnpx tsc --init\n\nmkdir src && mkdir src\u002Flib && mkdir src\u002Fsamples && mkdir src\u002Fmodules\n\ntouch src\u002Flib\u002Findex.ts && touch src\u002Findex.ts && touch src\u002Fmodules\u002Findex.ts && touch src\u002Ftypes.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_53":{"__typename":"Paragraph","id":"a2673db5d6a5_53","name":"cd3e","type":"P","href":null,"layout":null,"metadata":null,"text":"First we set up our index files.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_54":{"__typename":"Paragraph","id":"a2673db5d6a5_54","name":"7ca5","type":"P","href":null,"layout":null,"metadata":null,"text":"In index.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_55":{"__typename":"Paragraph","id":"a2673db5d6a5_55","name":"53be","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fcompress'\nexport * from '.\u002Fdecompress'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_56":{"__typename":"Paragraph","id":"a2673db5d6a5_56","name":"6e8b","type":"P","href":null,"layout":null,"metadata":null,"text":"In lib\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":15,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_57":{"__typename":"Paragraph","id":"a2673db5d6a5_57","name":"86e0","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fget-options'\nexport * from '.\u002Fget-match'\nexport * from '.\u002Fget-lookahead-buffer'\nexport * from '.\u002Fget-search-buffer'\nexport * from '.\u002Fcreate-array-buffer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_58":{"__typename":"Paragraph","id":"a2673db5d6a5_58","name":"3d13","type":"P","href":null,"layout":null,"metadata":null,"text":"And finally in modules\u002Findex.ts add.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":15,"end":31,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_59":{"__typename":"Paragraph","id":"a2673db5d6a5_59","name":"1ac7","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export * from '.\u002Fbinary-reader'\nexport * from '.\u002Fbinary-writer'","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_60":{"__typename":"Paragraph","id":"a2673db5d6a5_60","name":"efb7","type":"P","href":null,"layout":null,"metadata":null,"text":"We start by creating compress.ts in our src folder with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":21,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_61":{"__typename":"Paragraph","id":"a2673db5d6a5_61","name":"3340","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { getOptions, getMatch, getLookaheadBuffer, getSearchBuffer, createArrayBuffer } from \".\u002Flib\";\nimport { LZ77Options, EncodedArray } from '.\u002Ftypes'\n\nexport function compress(\n  input: string,\n  options?: Partial\u003CLZ77Options\u003E\n) {\n  const { searchBufferLength, lookaheadBufferLength } = getOptions(options)\n\n  const encodedArray: EncodedArray = []\n  const end = input.length - 1\n\n  let searchBuffer = ''\n\n  let codingPosition = 0\n\n  while (codingPosition \u003C= end) {\n    const lookaheadBuffer = getLookaheadBuffer(input, codingPosition, lookaheadBufferLength)\n    const [offset, length, matchedChars] = getMatch(\n      searchBuffer,\n      lookaheadBuffer\n    )\n\n    codingPosition += length\n\n    const nonMatchingChar = input[codingPosition] ?? ''\n\n    searchBuffer += matchedChars + nonMatchingChar\n\n    codingPosition++\n\n    searchBuffer = getSearchBuffer(searchBuffer, searchBufferLength)\n\n    encodedArray.push([offset, length, nonMatchingChar])\n  }\n\n  return createArrayBuffer(encodedArray)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_62":{"__typename":"Paragraph","id":"a2673db5d6a5_62","name":"f908","type":"P","href":null,"layout":null,"metadata":null,"text":"Our compression function takes in two inputs. A string as our data to be compressed and an options object for the compression settings. The settings that can be adjusted are the length of the search buffer and the lookahead buffer. With these settings we can influence the compression ratio of our output. If we have a larger search and lookahead buffer, we will potentially get more compression but the process will become slower. And vice versa if the buffers are smaller we potentially have less compression but a faster process. We set these options based on the user input or default options.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_63":{"__typename":"Paragraph","id":"a2673db5d6a5_63","name":"debe","type":"P","href":null,"layout":null,"metadata":null,"text":"We then set our encodedArray to an empty array that we will be filling with our encodings. Our end is set to the end of the last index in our input. We set the search buffer to an empty string and our coding position is set to 0.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_64":{"__typename":"Paragraph","id":"a2673db5d6a5_64","name":"9216","type":"P","href":null,"layout":null,"metadata":null,"text":"Next is our main loop. We continue this loop until we reach the end of our input. First we get our current lookahead buffer. The we use the search buffer and lookahead buffer to get an encoding for our character. We get back the offset, length and matched characters. We then add the length to our coding position. The character that we will be outputting is either the first non matching character in our lookahead buffer or the next character at our new coding position or an empty string. After that we add all our processed characters to our search buffer and move our coding position one position over. We finally get a new search buffer and push our new encoding to the encoded array.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_65":{"__typename":"Paragraph","id":"a2673db5d6a5_65","name":"4e36","type":"P","href":null,"layout":null,"metadata":null,"text":"When all the data is processed, create an array buffer and return it.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_66":{"__typename":"Paragraph","id":"a2673db5d6a5_66","name":"4d4a","type":"P","href":null,"layout":null,"metadata":null,"text":"In types.ts add the following.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":3,"end":11,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_67":{"__typename":"Paragraph","id":"a2673db5d6a5_67","name":"3a88","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export type LZ77Options = {\n  searchBufferLength: number\n  lookaheadBufferLength: number\n}\n\nexport type Encoding = [number, number, string]\n\nexport type Match = Encoding\n\nexport type EncodedArray = Encoding[]","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_68":{"__typename":"Paragraph","id":"a2673db5d6a5_68","name":"a118","type":"P","href":null,"layout":null,"metadata":null,"text":"In our lib folder create get-options.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":39,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_69":{"__typename":"Paragraph","id":"a2673db5d6a5_69","name":"8857","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { LZ77MaxSearchBufferLength, LZ77MaxLookaheadBufferLength } from \"..\u002Fconstants\";\nimport { LZ77Options } from \"..\u002Ftypes\";\n\nexport function getOptions(options: Partial\u003CLZ77Options\u003E = {}): LZ77Options {\n  const { searchBufferLength = 255, lookaheadBufferLength = 15 } = options\n\n  return {\n    searchBufferLength: Math.min(searchBufferLength, LZ77MaxSearchBufferLength),\n    lookaheadBufferLength: Math.min(lookaheadBufferLength, LZ77MaxLookaheadBufferLength)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_70":{"__typename":"Paragraph","id":"a2673db5d6a5_70","name":"7b93","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning an options object with user defined options or defaults. We are capping the length of both buffers because we are going to store our offset as 12 bits and our length as 4 bits. So our max search buffer length is 0xfff or 4095 and our lookahead buffer is 0xf or 15.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_71":{"__typename":"Paragraph","id":"a2673db5d6a5_71","name":"c7db","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder we create constants.ts which will hold our max values.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":28,"end":40,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_72":{"__typename":"Paragraph","id":"a2673db5d6a5_72","name":"dc13","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export const LZ77MaxSearchBufferLength = 0xfff\nexport const LZ77MaxLookaheadBufferLength = 0xf","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_73":{"__typename":"Paragraph","id":"a2673db5d6a5_73","name":"3c51","type":"P","href":null,"layout":null,"metadata":null,"text":"For our lookahead buffer we create get-lookahead-buffer.ts in our lib folder.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":35,"end":58,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_74":{"__typename":"Paragraph","id":"a2673db5d6a5_74","name":"801c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getLookaheadBuffer(\n  input: string,\n  codingPosition: number,\n  lookaheadBufferLength: number,\n) {\n  return input.substring(codingPosition, codingPosition + lookaheadBufferLength)\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_75":{"__typename":"Paragraph","id":"a2673db5d6a5_75","name":"0bb8","type":"P","href":null,"layout":null,"metadata":null,"text":"Here we are returning a substring of our input data based on our coding position and our search buffer length.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":65,"end":80,"href":null,"anchorType":null,"userId":null,"linkMetadata":null},{"__typename":"Markup","type":"STRONG","start":89,"end":109,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_76":{"__typename":"Paragraph","id":"a2673db5d6a5_76","name":"0f91","type":"P","href":null,"layout":null,"metadata":null,"text":"Next up the matching phase. This step is a little bit more involved. Create get-match.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":76,"end":88,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_77":{"__typename":"Paragraph","id":"a2673db5d6a5_77","name":"fc31","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { Match } from \"..\u002Ftypes\"\n\nexport function getMatch(searchBuffer: string, lookaheadBuffer: string) {\n  const [char] = lookaheadBuffer\n\n  let offset = 0\n  let lengthMatch = 0\n  let matchedChars = searchBuffer.lastIndexOf(char) === -1 ? '' : char\n\n  if (!matchedChars) return [offset, lengthMatch, matchedChars] as Match\n  \n  const searchBufferEnd = searchBuffer.length\n  \n  let indexLookaheadBuffer = lookaheadBuffer.length\n\n  while (indexLookaheadBuffer \u003E 0) {\n    const chars = lookaheadBuffer.substring(0, indexLookaheadBuffer)\n\n    const indexInSearchBuffer = searchBuffer.lastIndexOf(chars)\n\n    if (indexInSearchBuffer \u003E -1) {\n      lengthMatch = chars.length\n\n      matchedChars = chars\n\n      offset = searchBufferEnd - indexInSearchBuffer\n\n      \u002F* Get the run length of the matched chars in the lookahead buffer *\u002F\n      if (indexInSearchBuffer + chars.length === searchBufferEnd) {\n        while (indexLookaheadBuffer \u003C= lookaheadBuffer.length) {\n          const remainingChars = lookaheadBuffer.substring(indexLookaheadBuffer)\n          const match = remainingChars.indexOf(chars) === 0\n\n          if (!match) break\n\n          matchedChars += chars\n\n          indexLookaheadBuffer += chars.length\n\n          lengthMatch = matchedChars.length\n        }\n      }\n\n      break\n    }\n\n    indexLookaheadBuffer--\n  }\n\n  return [offset, lengthMatch, matchedChars] as Match\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_78":{"__typename":"Paragraph","id":"a2673db5d6a5_78","name":"7ea4","type":"P","href":null,"layout":null,"metadata":null,"text":"So what’s going on here? Our function takes in the search buffer and the lookahead buffer. We set our offset and length of the match to 0. First we check if our first character matches. Remember that the character out our coding position is added to the lookahead buffer. If it matches we add it to our matched characters. If we don’t have a match, we can stop and return [0, 0, ‘’].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_79":{"__typename":"Paragraph","id":"a2673db5d6a5_79","name":"5e7e","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we matched our first character, i.e. we know it is in the search buffer, we can process the rest of our lookahead buffer. Our main loop runs as long as our index is bigger than 0 because we already processed the first character.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_80":{"__typename":"Paragraph","id":"a2673db5d6a5_80","name":"19c8","type":"P","href":null,"layout":null,"metadata":null,"text":"We start with the longest match we could possibly find and work our way down. In our search buffer we will try to find the last index of this match.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_81":{"__typename":"Paragraph","id":"a2673db5d6a5_81","name":"e170","type":"P","href":null,"layout":null,"metadata":null,"text":"If we have a match we set our length to the matched chars set our offset accordingly. The next thing we do is check if we are at the end of the search buffer. Why? If you recalled, we can continue on with matching as long as our match repeats in the lookahead buffer, i.e. our run length encoding. We have a simple while loop that continues adding characters to our match as long as we find them.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":277,"end":296,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_82":{"__typename":"Paragraph","id":"a2673db5d6a5_82","name":"0ab5","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if we are done processing, we return our result as [offset, length match, matched characters].","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_83":{"__typename":"Paragraph","id":"a2673db5d6a5_83","name":"64d9","type":"P","href":null,"layout":null,"metadata":null,"text":"We still need to create the functions that updates our search buffer. In our lib folder create get-search-buffer-ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":95,"end":116,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_84":{"__typename":"Paragraph","id":"a2673db5d6a5_84","name":"8c53","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export function getSearchBuffer (searchBuffer: string, searchBufferLength: number) {\n  const currentLengthSearchBuffer = searchBuffer.length\n\n    \u002F*\n      Move the search buffer n positions over based on the difference\n      between the current lenght of the search buffer and the max length of our search buffer\n    *\u002F\n\n    if (currentLengthSearchBuffer \u003E= searchBufferLength) return searchBuffer.substring(currentLengthSearchBuffer - searchBufferLength)\n\n    return searchBuffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_85":{"__typename":"Paragraph","id":"a2673db5d6a5_85","name":"0772","type":"P","href":null,"layout":null,"metadata":null,"text":"What we doe here is simply returning our search buffer if it hasn’t exceeded the limits of the search buffer length else we remove the n position from the start and return the new buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_86":{"__typename":"Paragraph","id":"a2673db5d6a5_86","name":"982e","type":"P","href":null,"layout":null,"metadata":null,"text":"The last part is convert our encoded array to an array buffer. Because we are outputting binary data we are also going to consume binary data we will be creating a binary reader and a binary writer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_87":{"__typename":"Paragraph","id":"a2673db5d6a5_87","name":"7a7d","type":"P","href":null,"layout":null,"metadata":null,"text":"In our modules folder create binary-reader.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":29,"end":45,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_88":{"__typename":"Paragraph","id":"a2673db5d6a5_88","name":"0561","type":"PRE","href":null,"layout":null,"metadata":null,"text":"export class BinaryReader {\n  protected pos: number\n  protected bitCount: number\n\n  view: DataView\n\n  constructor(arrayBuffer: ArrayBuffer) {\n    this.view = new DataView(arrayBuffer)\n    this.pos = 0\n    this.bitCount = 0\n  }\n\n  protected getData(type = 'Uint8') {\n    if (this.view.byteLength \u003E this.pos) {\n\n      \u002F\u002F @ts-ignore\n      return this.view[`get${type}`](this.pos++)\n    }\n\n    throw new RangeError()\n  }\n\n  get buffer () {\n    return this.view.buffer\n  }\n\n  getBytePosition() {\n    return this.pos\n  }\n\n  seek(pos: number) {\n    const oldPos = this.pos\n\n    this.pos = pos\n\n    return oldPos\n  }\n\n  peak(index = this.pos + 1) {\n    if (this.view.byteLength \u003E index && index \u003E -1) {\n      return this.view.getUint8(index)\n    }\n\n    return null\n  }\n\n  getUint16() {\n    return (this.getData() \u003C\u003C 8) | this.getData()\n  }\n\n  getUint8() {\n    return this.getData()\n  }\n\n  getOffsetLength() {\n    const data = this.getUint16()\n\n    return [data \u003E\u003E\u003E 4, data & 0xf]\n  }\n\n  getCharacter() {\n    const uint8 = this.getData()\n\n    return uint8 ? String.fromCharCode(uint8) : ''\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_89":{"__typename":"Paragraph","id":"a2673db5d6a5_89","name":"6bbd","type":"P","href":null,"layout":null,"metadata":null,"text":"Next in the same folder create binary-writer.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":31,"end":48,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_90":{"__typename":"Paragraph","id":"a2673db5d6a5_90","name":"87c8","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from '.\u002Fbinary-reader'\n\nexport class BinaryWriter extends BinaryReader {\n  constructor(length: number) {\n    super(new ArrayBuffer(length))\n  }\n\n  private setData(data: number, type = 'Uint8') {\n    let advance = 0\n\n    switch(type) {\n      case 'Uint16':\n        advance = 2\n        break;\n      default:\n        advance = 1\n    }\n\n    if (this.view.byteLength \u003E this.pos) {\n      \u002F\u002F @ts-ignore\n      this.view[`set${type}`](this.pos, data)\n\n      this.pos += advance\n\n      return this\n    }\n\n    return this\n  }\n\n  setUint16(data: number) {\n    return this.setData(data, 'Uint16')\n  }\n\n  setUint8(data: number) {\n    return this.setData(data)\n  }\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_91":{"__typename":"Paragraph","id":"a2673db5d6a5_91","name":"b4cf","type":"P","href":null,"layout":null,"metadata":null,"text":"Now for the creating of our array buffer we create create-array-buffer.ts in our lib folder with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":51,"end":73,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_92":{"__typename":"Paragraph","id":"a2673db5d6a5_92","name":"6f83","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryWriter } from \"..\u002Fmodules\";\nimport { EncodedArray } from \"..\u002Ftypes\";\n\nexport function createArrayBuffer(encodedData: EncodedArray) {\n  const binaryWriter = new BinaryWriter(encodedData.length * 3)\n\n  encodedData.forEach(([ offset, length, character ]) =\u003E {\n    binaryWriter.setUint16(offset \u003C\u003C 4 | length)\n    binaryWriter.setUint8(character.charCodeAt(0))\n  })\n\n  return binaryWriter.buffer\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_93":{"__typename":"Paragraph","id":"a2673db5d6a5_93","name":"3f03","type":"P","href":null,"layout":null,"metadata":null,"text":"This function takes in the encoded data and outputs an array buffer. First we create a new binary writer with the length of our encoded data * 3 because we store our triplet in 32 bits. Next we loop over all our encodings. First we store our offset and length as a uint16 integer. We store our offset in the most significant 12 bits and our length in the 4 least significant bits. After that we store our character as a uint8 integer. When we processed all our data we return our buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_94":{"__typename":"Paragraph","id":"a2673db5d6a5_94","name":"bda7","type":"P","href":null,"layout":null,"metadata":null,"text":"That is all for the compression part.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_95":{"__typename":"Paragraph","id":"a2673db5d6a5_95","name":"ab18","type":"H3","href":null,"layout":null,"metadata":null,"text":"Decompress","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_96":{"__typename":"Paragraph","id":"a2673db5d6a5_96","name":"d7b9","type":"P","href":null,"layout":null,"metadata":null,"text":"Next we need the ability to decompress our data. So in our src folder create decompress.ts with the following content.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":77,"end":90,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_97":{"__typename":"Paragraph","id":"a2673db5d6a5_97","name":"1ecd","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import { BinaryReader } from \".\u002Fmodules\"\n\nexport function decompress(buffer: ArrayBuffer) {\n  const binaryReader = new BinaryReader(buffer)\n\n  let output = ''\n\n  let index = 0\n\n  while (binaryReader.peak() !== null) {\n    const [offset, length] = binaryReader.getOffsetLength()\n    const char = binaryReader.getCharacter()\n\n    if (offset === 0 && length === 0) output += char\n    else {\n      const startIndex = output.length - offset\n\n      const overflow = Math.max(startIndex + length - output.length, 0)\n\n      const chars = output.substring(startIndex, startIndex + length)\n\n      if (overflow) {\n        let runLength = length \u002F (length - overflow)\n\n        while (runLength \u003E 0) {\n          output += chars\n\n          runLength--\n        }\n      } else {\n        output += chars\n      }\n\n      output += char\n    }\n\n    index++\n  }\n\n  return output\n}","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_98":{"__typename":"Paragraph","id":"a2673db5d6a5_98","name":"1a64","type":"P","href":null,"layout":null,"metadata":null,"text":"Our function takes in our encoded data en returns, hopefully, the original data. The loop runs over the entire encoded data. If the offset and length of the entry is 0, we know this entry does not have a match so we add the character to our output. If we do have a length and offset, we get the start index in our output and retrieve our characters. Recall that the output functions as our search buffer.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_99":{"__typename":"Paragraph","id":"a2673db5d6a5_99","name":"5b0c","type":"P","href":null,"layout":null,"metadata":null,"text":"Since our data could be run length encoded, we need to check if our length is overflowing our current output. If it is, we determine our run length and output additional characters for the length of our run. When we don’t have a run length, we simply output the characters.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_100":{"__typename":"Paragraph","id":"a2673db5d6a5_100","name":"bc71","type":"P","href":null,"layout":null,"metadata":null,"text":"Now if all goes well we should have our original data back. So let’s test that out.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_101":{"__typename":"Paragraph","id":"a2673db5d6a5_101","name":"e7e5","type":"P","href":null,"layout":null,"metadata":null,"text":"In our src folder create test.ts with the following content:","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":25,"end":32,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_102":{"__typename":"Paragraph","id":"a2673db5d6a5_102","name":"908b","type":"PRE","href":null,"layout":null,"metadata":null,"text":"import assert from \"assert\"\n\nimport { compress, decompress } from \".\"\nimport { sampleOne as input } from \".\u002Fsamples\"\n\nconst compressed = compress(input)\n\nconst decompressed = decompress(compressed)\n\nassert(decompressed === input)\n\nif (compressed.length \u003C input.length) console.log('🎉')\nelse console.log('💩')","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"typescript"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_103":{"__typename":"Paragraph","id":"a2673db5d6a5_103","name":"c6f9","type":"P","href":null,"layout":null,"metadata":null,"text":"In this file we write a simple test for our compression and decompression. We first compress and decompress. After that we check if our decompressed data equals our original data. If that succeeds we have two options, we either have reduced our data size or we haven’t and show a fitting emoji accordingly. We have our options set to default. You can play around with these and you should get different results.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_104":{"__typename":"Paragraph","id":"a2673db5d6a5_104","name":"7a46","type":"P","href":null,"layout":null,"metadata":null,"text":"In the sample folder are six different samples. You can swap out sampleOne for any of the other samples. The samples can be found on github.","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"A","start":133,"end":139,"href":"https:\u002F\u002Fgithub.com\u002Fvincentcorbee\u002FLZ77\u002Ftree\u002Fmain\u002Fsrc\u002Fsamples","anchorType":"LINK","userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_105":{"__typename":"Paragraph","id":"a2673db5d6a5_105","name":"f085","type":"P","href":null,"layout":null,"metadata":null,"text":"So let’s run some tests. To run the test use de following command in our root folder folder:","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_106":{"__typename":"Paragraph","id":"a2673db5d6a5_106","name":"04aa","type":"PRE","href":null,"layout":null,"metadata":null,"text":"npx ts-node src\u002Ftest.ts","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_107":{"__typename":"Paragraph","id":"a2673db5d6a5_107","name":"d735","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s run our test with sample one.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_108":{"__typename":"Paragraph","id":"a2673db5d6a5_108","name":"4e6c","type":"PRE","href":null,"layout":null,"metadata":null,"text":"15 12\n💩","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_109":{"__typename":"Paragraph","id":"a2673db5d6a5_109","name":"dcb6","type":"P","href":null,"layout":null,"metadata":null,"text":"Ah to bad, no compression here. We expanded our output by 3 bytes with a ratio of 0.8.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_110":{"__typename":"Paragraph","id":"a2673db5d6a5_110","name":"8c1e","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample two","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_111":{"__typename":"Paragraph","id":"a2673db5d6a5_111","name":"1d98","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 45\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_112":{"__typename":"Paragraph","id":"a2673db5d6a5_112","name":"5a00","type":"P","href":null,"layout":null,"metadata":null,"text":"Hoera, we have compression!🥹 We have a compression ratio of 2.14, not bad.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_113":{"__typename":"Paragraph","id":"a2673db5d6a5_113","name":"524a","type":"P","href":null,"layout":null,"metadata":null,"text":"Next sample three.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_114":{"__typename":"Paragraph","id":"a2673db5d6a5_114","name":"668e","type":"PRE","href":null,"layout":null,"metadata":null,"text":"2823 3059\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_115":{"__typename":"Paragraph","id":"a2673db5d6a5_115","name":"8655","type":"P","href":null,"layout":null,"metadata":null,"text":"Ok, we still achieved some compression with a ratio of 1.08.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_116":{"__typename":"Paragraph","id":"a2673db5d6a5_116","name":"6f44","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s see what sample four gives us.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_117":{"__typename":"Paragraph","id":"a2673db5d6a5_117","name":"e883","type":"PRE","href":null,"layout":null,"metadata":null,"text":"22374 24543\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_118":{"__typename":"Paragraph","id":"a2673db5d6a5_118","name":"3579","type":"P","href":null,"layout":null,"metadata":null,"text":"Looks similar to last result with a ratio of 1.1.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_119":{"__typename":"Paragraph","id":"a2673db5d6a5_119","name":"e451","type":"P","href":null,"layout":null,"metadata":null,"text":"Let’s try sample five.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_120":{"__typename":"Paragraph","id":"a2673db5d6a5_120","name":"cf99","type":"PRE","href":null,"layout":null,"metadata":null,"text":"21 25\n🎉","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":{"__typename":"CodeBlockMetadata","mode":"EXPLICIT","lang":"shell"},"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_121":{"__typename":"Paragraph","id":"a2673db5d6a5_121","name":"c02f","type":"P","href":null,"layout":null,"metadata":null,"text":"Mew, still some compression but only a ratio of 1.19.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_122":{"__typename":"Paragraph","id":"a2673db5d6a5_122","name":"647a","type":"P","href":null,"layout":null,"metadata":null,"text":"As you can see, with our default options we can get some compression on most of our examples. If we increased our search buffer we can probably do better. It also further depends on the nature of our source. If we have highly repetitive data we would achieve more compression. The reason why LZ77 also does not achieve that much compression in practice is the fact that we have to emit a triplet for every piece of data. Other LZ scheme’s try to solve this. For example LZSS emits a tuple in the form of [offset, length] only when emitting it would save data rather than emitting the original data.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_123":{"__typename":"Paragraph","id":"a2673db5d6a5_123","name":"c54a","type":"H3","href":null,"layout":null,"metadata":null,"text":"Conclusion","hasDropCap":null,"dropCapImage":null,"markups":[{"__typename":"Markup","type":"STRONG","start":0,"end":10,"href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Paragraph:a2673db5d6a5_124":{"__typename":"Paragraph","id":"a2673db5d6a5_124","name":"518b","type":"P","href":null,"layout":null,"metadata":null,"text":"So have come to the end of our journey into LZ77 in Javascript. Although useless for the deflate algorithm, I have found it interesting to learn about the algorithm and implement it in Javascript. I hope that if you have gotten this far you have the feeling that you also maybe learned something.","hasDropCap":null,"dropCapImage":null,"markups":[],"codeBlockMetadata":null,"iframe":null,"mixtapeMetadata":null},"Membership:820ac4906a2d":{"__typename":"Membership","tier":"MEMBER","id":"820ac4906a2d"},"Tag:javascript":{"__typename":"Tag","id":"javascript","displayTitle":"JavaScript","normalizedTagSlug":"javascript"},"Tag:typescript":{"__typename":"Tag","id":"typescript","displayTitle":"Typescript","normalizedTagSlug":"typescript"},"Tag:computer-science":{"__typename":"Tag","id":"computer-science","displayTitle":"Computer Science","normalizedTagSlug":"computer-science"},"Tag:compression":{"__typename":"Tag","id":"compression","displayTitle":"Compression","normalizedTagSlug":"compression"},"Post:cd2583d2a8bd":{"__typename":"Post","id":"cd2583d2a8bd","collection":null,"content({\"postMeteringOptions\":{}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"bodyModel":{"__typename":"RichText","sections":[{"__typename":"Section","name":"d124","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3187","startIndex":3,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2120","startIndex":4,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"2203","startIndex":48,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"b8ef","startIndex":101,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null},{"__typename":"Section","name":"3f7a","startIndex":123,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}],"paragraphs":[{"__ref":"Paragraph:a2673db5d6a5_0"},{"__ref":"Paragraph:a2673db5d6a5_1"},{"__ref":"Paragraph:a2673db5d6a5_2"},{"__ref":"Paragraph:a2673db5d6a5_3"},{"__ref":"Paragraph:a2673db5d6a5_4"},{"__ref":"Paragraph:a2673db5d6a5_5"},{"__ref":"Paragraph:a2673db5d6a5_6"},{"__ref":"Paragraph:a2673db5d6a5_7"},{"__ref":"Paragraph:a2673db5d6a5_8"},{"__ref":"Paragraph:a2673db5d6a5_9"},{"__ref":"Paragraph:a2673db5d6a5_10"},{"__ref":"Paragraph:a2673db5d6a5_11"},{"__ref":"Paragraph:a2673db5d6a5_12"},{"__ref":"Paragraph:a2673db5d6a5_13"},{"__ref":"Paragraph:a2673db5d6a5_14"},{"__ref":"Paragraph:a2673db5d6a5_15"},{"__ref":"Paragraph:a2673db5d6a5_16"},{"__ref":"Paragraph:a2673db5d6a5_17"},{"__ref":"Paragraph:a2673db5d6a5_18"},{"__ref":"Paragraph:a2673db5d6a5_19"},{"__ref":"Paragraph:a2673db5d6a5_20"},{"__ref":"Paragraph:a2673db5d6a5_21"},{"__ref":"Paragraph:a2673db5d6a5_22"},{"__ref":"Paragraph:a2673db5d6a5_23"},{"__ref":"Paragraph:a2673db5d6a5_24"},{"__ref":"Paragraph:a2673db5d6a5_25"},{"__ref":"Paragraph:a2673db5d6a5_26"},{"__ref":"Paragraph:a2673db5d6a5_27"},{"__ref":"Paragraph:a2673db5d6a5_28"},{"__ref":"Paragraph:a2673db5d6a5_29"},{"__ref":"Paragraph:a2673db5d6a5_30"},{"__ref":"Paragraph:a2673db5d6a5_31"},{"__ref":"Paragraph:a2673db5d6a5_32"},{"__ref":"Paragraph:a2673db5d6a5_33"},{"__ref":"Paragraph:a2673db5d6a5_34"},{"__ref":"Paragraph:a2673db5d6a5_35"},{"__ref":"Paragraph:a2673db5d6a5_36"},{"__ref":"Paragraph:a2673db5d6a5_37"},{"__ref":"Paragraph:a2673db5d6a5_38"},{"__ref":"Paragraph:a2673db5d6a5_39"},{"__ref":"Paragraph:a2673db5d6a5_40"},{"__ref":"Paragraph:a2673db5d6a5_41"},{"__ref":"Paragraph:a2673db5d6a5_42"},{"__ref":"Paragraph:a2673db5d6a5_43"},{"__ref":"Paragraph:a2673db5d6a5_44"},{"__ref":"Paragraph:a2673db5d6a5_45"},{"__ref":"Paragraph:a2673db5d6a5_46"},{"__ref":"Paragraph:a2673db5d6a5_47"},{"__ref":"Paragraph:a2673db5d6a5_48"},{"__ref":"Paragraph:a2673db5d6a5_49"},{"__ref":"Paragraph:a2673db5d6a5_50"},{"__ref":"Paragraph:a2673db5d6a5_51"},{"__ref":"Paragraph:a2673db5d6a5_52"},{"__ref":"Paragraph:a2673db5d6a5_53"},{"__ref":"Paragraph:a2673db5d6a5_54"},{"__ref":"Paragraph:a2673db5d6a5_55"},{"__ref":"Paragraph:a2673db5d6a5_56"},{"__ref":"Paragraph:a2673db5d6a5_57"},{"__ref":"Paragraph:a2673db5d6a5_58"},{"__ref":"Paragraph:a2673db5d6a5_59"},{"__ref":"Paragraph:a2673db5d6a5_60"},{"__ref":"Paragraph:a2673db5d6a5_61"},{"__ref":"Paragraph:a2673db5d6a5_62"},{"__ref":"Paragraph:a2673db5d6a5_63"},{"__ref":"Paragraph:a2673db5d6a5_64"},{"__ref":"Paragraph:a2673db5d6a5_65"},{"__ref":"Paragraph:a2673db5d6a5_66"},{"__ref":"Paragraph:a2673db5d6a5_67"},{"__ref":"Paragraph:a2673db5d6a5_68"},{"__ref":"Paragraph:a2673db5d6a5_69"},{"__ref":"Paragraph:a2673db5d6a5_70"},{"__ref":"Paragraph:a2673db5d6a5_71"},{"__ref":"Paragraph:a2673db5d6a5_72"},{"__ref":"Paragraph:a2673db5d6a5_73"},{"__ref":"Paragraph:a2673db5d6a5_74"},{"__ref":"Paragraph:a2673db5d6a5_75"},{"__ref":"Paragraph:a2673db5d6a5_76"},{"__ref":"Paragraph:a2673db5d6a5_77"},{"__ref":"Paragraph:a2673db5d6a5_78"},{"__ref":"Paragraph:a2673db5d6a5_79"},{"__ref":"Paragraph:a2673db5d6a5_80"},{"__ref":"Paragraph:a2673db5d6a5_81"},{"__ref":"Paragraph:a2673db5d6a5_82"},{"__ref":"Paragraph:a2673db5d6a5_83"},{"__ref":"Paragraph:a2673db5d6a5_84"},{"__ref":"Paragraph:a2673db5d6a5_85"},{"__ref":"Paragraph:a2673db5d6a5_86"},{"__ref":"Paragraph:a2673db5d6a5_87"},{"__ref":"Paragraph:a2673db5d6a5_88"},{"__ref":"Paragraph:a2673db5d6a5_89"},{"__ref":"Paragraph:a2673db5d6a5_90"},{"__ref":"Paragraph:a2673db5d6a5_91"},{"__ref":"Paragraph:a2673db5d6a5_92"},{"__ref":"Paragraph:a2673db5d6a5_93"},{"__ref":"Paragraph:a2673db5d6a5_94"},{"__ref":"Paragraph:a2673db5d6a5_95"},{"__ref":"Paragraph:a2673db5d6a5_96"},{"__ref":"Paragraph:a2673db5d6a5_97"},{"__ref":"Paragraph:a2673db5d6a5_98"},{"__ref":"Paragraph:a2673db5d6a5_99"},{"__ref":"Paragraph:a2673db5d6a5_100"},{"__ref":"Paragraph:a2673db5d6a5_101"},{"__ref":"Paragraph:a2673db5d6a5_102"},{"__ref":"Paragraph:a2673db5d6a5_103"},{"__ref":"Paragraph:a2673db5d6a5_104"},{"__ref":"Paragraph:a2673db5d6a5_105"},{"__ref":"Paragraph:a2673db5d6a5_106"},{"__ref":"Paragraph:a2673db5d6a5_107"},{"__ref":"Paragraph:a2673db5d6a5_108"},{"__ref":"Paragraph:a2673db5d6a5_109"},{"__ref":"Paragraph:a2673db5d6a5_110"},{"__ref":"Paragraph:a2673db5d6a5_111"},{"__ref":"Paragraph:a2673db5d6a5_112"},{"__ref":"Paragraph:a2673db5d6a5_113"},{"__ref":"Paragraph:a2673db5d6a5_114"},{"__ref":"Paragraph:a2673db5d6a5_115"},{"__ref":"Paragraph:a2673db5d6a5_116"},{"__ref":"Paragraph:a2673db5d6a5_117"},{"__ref":"Paragraph:a2673db5d6a5_118"},{"__ref":"Paragraph:a2673db5d6a5_119"},{"__ref":"Paragraph:a2673db5d6a5_120"},{"__ref":"Paragraph:a2673db5d6a5_121"},{"__ref":"Paragraph:a2673db5d6a5_122"},{"__ref":"Paragraph:a2673db5d6a5_123"},{"__ref":"Paragraph:a2673db5d6a5_124"}]},"validatedShareKey":"","shareKeyCreator":null},"creator":{"__ref":"User:78a7b5569c1"},"inResponseToEntityType":null,"isLocked":false,"isMarkedPaywallOnly":false,"lockedSource":"LOCKED_POST_SOURCE_NONE","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@vincentcorbee\u002Flz77-compression-in-javascript-cd2583d2a8bd","primaryTopic":{"__ref":"Topic:63c6f1f93ee"},"topics":[{"__typename":"Topic","slug":"javascript"},{"__typename":"Topic","slug":"programming"}],"isPublished":true,"latestPublishedVersion":"a2673db5d6a5","visibility":"PUBLIC","postResponses":{"__typename":"PostResponses","count":0},"createdAt":1672650724964,"firstPublishedAt":1673793771477,"latestPublishedAt":1674849219127,"clapCount":13,"allowResponses":true,"isLimitedState":false,"title":"LZ77 compression in Javascript","isSeries":false,"sequence":null,"uniqueSlug":"lz77-compression-in-javascript-cd2583d2a8bd","socialTitle":"","socialDek":"","noIndex":null,"canonicalUrl":"","metaDescription":"","readingTime":16.475471698113207,"previewContent":{"__typename":"PreviewContent","subtitle":"When I was working on a library for creating pdf’s in Javascript, I wanted that the library was able to use compression filters in stream…"},"previewImage":{"__ref":"ImageMetadata:1*lAxi1TrfT8UNKj0KSUo6JA.jpeg"},"isShortform":false,"seoTitle":"","updatedAt":1674849226158,"shortformType":"SHORTFORM_TYPE_LINK","seoDescription":"","isSuspended":false,"license":"ALL_RIGHTS_RESERVED","tags":[{"__ref":"Tag:javascript"},{"__ref":"Tag:typescript"},{"__ref":"Tag:computer-science"},{"__ref":"Tag:compression"}],"pendingCollection":null,"statusForCollection":null,"detectedLanguage":"en","wordCount":4313,"layerCake":3}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.aa3177a7.js"></script><script src="https://cdn-client.medium.com/lite/static/js/3057.5e22bbb0.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.e3408074.js"></script><script src="https://cdn-client.medium.com/lite/static/js/instrumentation.5e7f2981.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.2021fe63.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4398.db4d4378.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7883.0e445e04.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6733.1d85727b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4711.043615ac.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8695.9065ba3d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4341.e697d2a1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5971.c8339d3b.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5203.e7a22052.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7222.a06e9442.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6487.09cd8beb.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5459.7b1218fd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6804.2cda7ee2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1711.b70f1a35.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/7652.f5b06845.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2462.0589a8d7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9174.24f568ee.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/1128.cb861fd1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4129.ee8ae2c8.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8580.feeb2549.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/8883.c8b03d13.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/4078.da7800a7.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9408.3df4db57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9150.42fafb2e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5005.b5d4a37c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/6605.6978809c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2393.aaa1ee6d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/2211.706ab0f5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/PostPage.MainContent.0377a67c.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js/v84a3a4012de94ce1a686ba8c167c359c1696973893317" integrity="sha512-euoFGowhlaLqXsPWQ48qSkBSCFs3DPRyiwVu3FjR96cMPx+Fr+gpWRhIafcHwqwCqWS42RZhIudOvEI+Ckf6MA==" data-cf-beacon='{"rayId":"86ac62322b0003e3","version":"2024.3.0","token":"0b5f665943484354a59c39c6833f7078"}' crossorigin="anonymous"></script>
</body></html>